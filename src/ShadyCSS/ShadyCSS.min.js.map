{"version":3,"sources":[" [synthetic:base] "," [synthetic:util/defineproperty] "," [synthetic:util/global] "," [synthetic:es6/symbol] "," [synthetic:util/owns] "," [synthetic:util/polyfill] "," [synthetic:es6/object/assign] ","src/ShadyCSS/css-parse.js","src/ShadyCSS/style-settings.js","src/ShadyCSS/style-util.js","src/ShadyCSS/style-transformer.js","src/ShadyCSS/style-properties.js","src/ShadyCSS/template-map.js","src/ShadyCSS/style-placeholder.js","src/ShadyCSS/apply-shim.js","src/ShadyCSS/ShadyStyling.js"],"names":["parse$$module$$src$ShadyCSS$css_parse","parse","text","clean","parseCss","lex","clean$$module$$src$ShadyCSS$css_parse","cssText","replace","RX","comments","port","lex$$module$$src$ShadyCSS$css_parse","root","start","end","length","n","i","l","OPEN_BRACE","rules","p","parent","previous","push","CLOSE_BRACE","parseCss$$module$$src$ShadyCSS$css_parse","node","t","substring","parsedCssText","trim","ss","_expandUnicodeEscapes","multipleSpaces","lastIndexOf","s","parsedSelector","selector","atRule","indexOf","AT_START","MEDIA_START","type","types","MEDIA_RULE","match","keyframesRule","KEYFRAMES_RULE","keyframesName","split","pop","VAR_START","MIXIN_RULE","STYLE_RULE","r$","r","_expandUnicodeEscapes$$module$$src$ShadyCSS$css_parse","code","repeat","stringify$$module$$src$ShadyCSS$css_parse","stringify","preserveProperties","_hasMixinRules","removeCustomProps","_hasMixinRules$$module$$src$ShadyCSS$css_parse","removeCustomProps$$module$$src$ShadyCSS$css_parse","removeCustomPropAssignment","removeCustomPropApply","removeCustomPropAssignment$$module$$src$ShadyCSS$css_parse","customProp","mixinProp","removeCustomPropApply$$module$$src$ShadyCSS$css_parse","mixinApply","varApply","window","WCT","types$$module$$src$ShadyCSS$css_parse","module$$src$ShadyCSS$css_parse","nativeShadow","ShadyDOM","inUse","forceShimCssProperties","location","search","nativeCssVariables","navigator","userAgent","CSS","supports","detectNativeApply$$module$$src$ShadyCSS$style_settings","detectNativeApply","style","document","createElement","textContent","head","appendChild","nativeCssApply","sheet","cssRules","removeChild","module$$src$ShadyCSS$style_settings","toCssText$$module$$src$ShadyCSS$style_util","toCssText","callback","forEachRule","rulesForStyle$$module$$src$ShadyCSS$style_util","rulesForStyle","__cssRules","isKeyframesSelector$$module$$src$ShadyCSS$style_util","isKeyframesSelector","rule","forEachRule$$module$$src$ShadyCSS$style_util","styleRuleCallback","keyframesRuleCallback","onlyActiveRules","skipRules","matchMedia","rx","MEDIA_MATCH","matches","applyCss$$module$$src$ShadyCSS$style_util","applyCss","moniker","target","contextNode","createScopeStyle","applyStyle","applyStyle$$module$$src$ShadyCSS$style_util","after","nextSibling","firstChild","lastHeadApplyNode","insertBefore","createScopeStyle$$module$$src$ShadyCSS$style_util","setAttribute","applyStylePlaceHolder$$module$$src$ShadyCSS$style_util","applyStylePlaceHolder","placeHolder","createComment","scope","isTargetedBuild$$module$$src$ShadyCSS$style_util","isTargetedBuild","buildType","getCssBuildType$$module$$src$ShadyCSS$style_util","getCssBuildType","element","getAttribute","findMatchingParen$$module$$src$ShadyCSS$style_util","findMatchingParen","level","processVariableAndFallback$$module$$src$ShadyCSS$style_util","processVariableAndFallback","str","inner","prefix","suffix","comma","value","fallback","VAR_ASSIGN","MIXIN_MATCH","VAR_CONSUMED","ANIMATION_MATCH","IS_VAR","BRACKETED","HOST_PREFIX","HOST_SUFFIX","module$$src$ShadyCSS$style_util","StyleTransformer","dom","shouldRemoveScope","__styleScoped","_transformDom","classList","c$","localName","childNodes","content","_content","children","remove","SCOPE_NAME","add","c","CLASS","elementStyles","styleRules","cssBuildType","__cssBuild","css","is","extends","ext","hostScope","_calcHostScope","_calcElementScope","self","isScoped","CSS_CLASS_PREFIX","_transformRule","_transformComplexSelector","transformer","transformedSelector","_transformRuleCss","p$","COMPLEX_SELECTOR_SEP","call","join","stop","hostContext","CONTENT_START","HOST","SIMPLE_SELECTOR_SEP","m","SCOPE_JUMP","info","_transformCompoundSelector","combinator","HOST_CONTEXT_PAREN","pre","paren","post","jumpIndex","HOST_CONTEXT","_transformHostSelector","_transformSimpleSelector","CONTENT","slotted","SLOTTED","SLOTTED_PAREN","inside","PSEUDO_PREFIX","HOST_PAREN","SIMPLE_SELECTOR_PREFIX","host","typeSelector","SELECTOR_NO_MATCH","documentRule","normalizeRootSelector","_transformDocumentSelector","ROOT","SCOPE_DOC_SELECTOR","RegExp","module$$src$ShadyCSS$style_transformer","Element","prototype","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","IS_IE","StyleProperties","decorateStyles","props","keyframes","ruleIndex","scopeSelector","cssBuild","decorateRule","index","whenHostOrRootRule","ruleTypes","__notStyleScopeCacheable","isHost","hostContextOrFunction","some","collectPropertiesInCssText","propertyInfo","onKeyframesRule","_keyframes","names","properties","collectProperties","hasProperties","collectCssText","Object","assign","exec","any","collectConsumingCssText","name","reify","getOwnPropertyNames","valueForProperty","property","valueForProperties","fn","propertyValue","parts","lastIndex","colon","pp","slice","applyProperties","output","applyKeyframeTransforms","keyframeTransforms","input","hasAnimations","test","keyframeNamesToTransform","keyframe","transform","propertyDataFromStyles","o","selectorToMatch","addToBitMask","key","isRoot","hostAndRootPropertiesForScope","hostProps","rootProps","_element","transformStyles","hostSelector","rxHostSelector","hostRx","__styleRules","_elementKeyframeTransforms","_scopeSelector","keyframesRules","_scopeKeyframes","_keyframesRuleTransformer","keyframesNameRx","transformedKeyframesName","scopeId","applyElementScopeSelector","old","v","XSCOPE_NAME","applyElementStyle","__customStyle","_useCount","parentNode","shadowRoot","__placeholder","applyCustomStyle","addToBitMask$$module$$src$ShadyCSS$style_properties","bits","parseInt","module$$src$ShadyCSS$style_properties","templateMap","module$$src$ShadyCSS$template_map","placeholderMap","ce","customElements","origDefine","define","ce$$module$$src$ShadyCSS$style_placeholder.define","arguments","apply","module$$src$ShadyCSS$style_placeholder","APPLY_NAME_CLEAN","INITIAL_INHERIT","MIXIN_VAR_SEP","MixinMap","constructor","_map","set","dependants","get","ApplyShim","_measureElement","_currentTemplate","_separator","_boundProduceCssProperties","this._boundProduceCssProperties","matchText","propertyName","valueProperty","valueMixin","_produceCssProperties","transformStyle","elementName","transformRulse","transformRules","transformRule","__applyShimInvalid","transformCssText","_consumeCssProperties","_getInitialValueForProperty","all","getComputedStyle","getPropertyValue","mixinName","idx","applyPos","afterApplyPos","textBeforeApply","textAfterApply","defaults","_cssTextToMap","replacement","_atApplyToCssProperties","fallbacks","vars","mixinEntry","f","_replaceInitialOrInherit","out","sp","_invalidateMixinEntry","mixinAsProperties","combinedProps","mixinValues","oldProps","create","needToInvalidate","undefined","applyShim","$jscompDefaultExport","module$$src$ShadyCSS$apply_shim","default","STYLEHOST","Symbol","ShadyCSS","scopeCounter","nativeCss","_documentOwner","documentElement","_generateScopeSelector","id","_gatherStyles","template","styles","querySelectorAll","prepareTemplate","_prepared","ast","ownPropertyNames","_styleAst","_generateStaticStyle","placeholder","_ownPropertyNames","shadowroot","_prepareHost","__overrideStyleProperties","__styleProperties","__ownStyleProperties","__scopeSelector","__ownStylePropertyNames","overrideProps","_ensureDocumentApplied","_updateNativeProperties","_updateProperties","_applyStyleProperties","_isRootOwner","_applyToDescendants","markDocumentDirty","__clean","isDocumentDirty","owner","s$","__documentStyles","removeAttribute","_styleOwnerForNode","getRootNode","oldScopeSelector","hostAndRootProps","propertiesMatchingHost","_mixinOverrideStyles","ownProps","overrides","removeProperty","setProperty","transformForDocument","shouldAdd","updateStyles","module$$src$ShadyCSS$ShadyStyling"],"mappings":"A;;;;;;;;;;aAyBA,IAAI,QAAU,CAGN,MAAQ,EAHF,CCWd,QAAA,eAAA,CACsC,UAAlC,EAAA,MAAO,OAAA,iBAAP,CACA,MAAA,eADA,CAEA,QAAQ,CAAC,CAAD,CAAS,CAAT,CAAmB,CAAnB,CAA+B,CAErC,GAAI,CAAA,IAAJ,EAAsB,CAAA,IAAtB,CACE,KAAM,KAAI,SAAJ,CAAc,2CAAd,CAAN,CAEE,CAAJ,EAAc,KAAA,UAAd,EAAiC,CAAjC,EAA2C,MAAA,UAA3C,GACA,CAAA,CAAO,CAAP,CADA,CACmB,CAAA,MADnB,CALqC,CCV3C,QAAA,UAAA,CAAoB,QAAQ,CAAC,CAAD,CAAc,CACxC,MAAyB,WAAlB,EAAC,MAAO,OAAR,EAAiC,MAAjC,GAA4C,CAA5C,CACH,CADG,CAEe,WAAlB,EAAC,MAAO,OAAR,CAAiC,MAAjC,CAA0C,CAHN,CAc1C,QAAA,OAAA,CAAiB,OAAA,UAAA,CAAkB,IAAlB,CCvBjB,QAAA,cAAA,CAAwB,gBAOxB;OAAA,WAAA,CAAqB,QAAQ,EAAG,CAE9B,OAAA,WAAA,CAAqB,QAAQ,EAAG,EAE3B,QAAA,OAAA,OAAL,GACE,OAAA,OAAA,OADF,CAC0B,OAAA,OAD1B,CAJ8B,CAWhC,QAAA,eAAA,CAAyB,CASzB,QAAA,OAAA,CAAiB,QAAQ,CAAC,CAAD,CAAkB,CACzC,MACI,QAAA,cADJ,EAC6B,CAD7B,EACgD,EADhD,EACuD,OAAA,eAAA,EAFd,CAW3C;OAAA,mBAAA,CAA6B,QAAQ,EAAG,CACtC,OAAA,WAAA,EACA,KAAI,EAAiB,OAAA,OAAA,OAAA,SAChB,EAAL,GACE,CADF,CACmB,OAAA,OAAA,OAAA,SADnB,CAEM,OAAA,OAAA,OAAA,CAAsB,UAAtB,CAFN,CAK8C,WAA9C,EAAI,MAAO,MAAA,UAAA,CAAgB,CAAhB,CAAX,EACE,OAAA,eAAA,CACI,KAAA,UADJ,CACqB,CADrB,CACqC,CAC/B,aAAc,CAAA,CADiB,CAE/B,SAAU,CAAA,CAFqB,CAO/B,MAAO,QAAQ,EAAG,CAChB,MAAO,QAAA,cAAA,CAAsB,IAAtB,CADS,CAPa,CADrC,CAeF,QAAA,mBAAA,CAA6B,QAAQ,EAAG,EAxBF,CAkCxC,QAAA,cAAA,CAAwB,QAAQ,CAAC,CAAD,CAAQ,CACtC,IAAI,EAAQ,CACZ,OAAO,QAAA,kBAAA,CAA0B,QAAQ,EAAG,CAC1C,MAAI,EAAJ,CAAY,CAAA,OAAZ,CACS,CACL,KAAM,CAAA,CADD,CAEL,MAAO,CAAA,CAAM,CAAA,EAAN,CAFF,CADT,CAMS,CAAC,KAAM,CAAA,CAAP,CAPiC,CAArC,CAF+B,CA0BxC;OAAA,kBAAA,CAA4B,QAAQ,CAAC,CAAD,CAAO,CACzC,OAAA,mBAAA,EAEI,EAAA,CAAW,CAAC,KAAM,CAAP,CAKf,EAAA,CAAS,OAAA,OAAA,OAAA,SAAT,CAAA,CAA2C,QAAQ,EAAG,CAAE,MAAO,KAAT,CACtD,OAAyC,EATA,CC9F3C,QAAA,KAAA,CAAe,QAAQ,CAAC,CAAD,CAAM,CAAN,CAAY,CACjC,MAAO,OAAA,UAAA,eAAA,KAAA,CAAqC,CAArC,CAA0C,CAA1C,CAD0B,CCKnC,QAAA,SAAA,CAAmB,QAAQ,CAAC,CAAD,CAAS,CAAT,CAAmB,CAAnB,CAA6B,CAA7B,CAAqC,CAC9D,GAAK,CAAL,CAAA,CACI,CAAA,CAAM,OAAA,OACN,EAAA,CAAQ,CAAA,MAAA,CAAa,GAAb,CACZ,KAAS,CAAT,CAAa,CAAb,CAAgB,CAAhB,CAAoB,CAAA,OAApB,CAAmC,CAAnC,CAAsC,CAAA,EAAtC,CAA2C,CACzC,IAAI,EAAM,CAAA,CAAM,CAAN,CACJ,EAAN,GAAa,EAAb,GAAmB,CAAA,CAAI,CAAJ,CAAnB,CAA8B,EAA9B,CACA,EAAA,CAAM,CAAA,CAAI,CAAJ,CAHmC,CAKvC,CAAA,CAAW,CAAA,CAAM,CAAA,OAAN,CAAqB,CAArB,CACX,EAAA,CAAO,CAAA,CAAI,CAAJ,CACP,EAAA,CAAO,CAAA,CAAS,CAAT,CACP,EAAJ,EAAY,CAAZ,EAA4B,IAA5B,EAAoB,CAApB,EACA,OAAA,eAAA,CACI,CADJ,CACS,CADT,CACmB,CAAC,aAAc,CAAA,CAAf,CAAqB,SAAU,CAAA,CAA/B,CAAqC,MAAO,CAA5C,CADnB,CAZA,CAD8D,CCVhE;OAAA,SAAA,CAAiB,eAAjB,CAAkC,QAAQ,CAAC,CAAD,CAAO,CAC/C,MAAI,EAAJ,CAAiB,CAAjB,CAYe,QAAQ,CAAC,CAAD,CAAS,CAAT,CAAmB,CACxC,IAAK,IAAI,EAAI,CAAb,CAAgB,CAAhB,CAAoB,SAAA,OAApB,CAAsC,CAAA,EAAtC,CAA2C,CACzC,IAAI,EAAS,SAAA,CAAU,CAAV,CACb,IAAK,CAAL,CACA,IAAK,IAAI,CAAT,GAAgB,EAAhB,CACM,OAAA,KAAA,CAAa,CAAb,CAAqB,CAArB,CAAJ,GAA+B,CAAA,CAAO,CAAP,CAA/B,CAA6C,CAAA,CAAO,CAAP,CAA7C,CAJuC,CAO3C,MAAO,EARiC,CAbK,CAAjD,CAyBG,UAzBH,CAyBe,KAzBf,CCHC,KAAA,+BAAA,EAAMA,SAASC,sCAAK,CAACC,CAAD,CAAO,CAC1BA,CAAA,CAAOC,qCAAA,CAAMD,CAAN,CACP,OAAOE,yCAAA,CAASC,mCAAA,CAAIH,CAAJ,CAAT,CAAoBA,CAApB,CAFmB;AAM5BI,QAASH,sCAAK,CAACI,CAAD,CAAU,CACtB,MAAOA,EAAAC,QAAA,CAAgBC,kCAAAC,SAAhB,CAA6B,EAA7B,CAAAF,QAAA,CAAyCC,kCAAAE,KAAzC,CAAkD,EAAlD,CADe;AAKxBC,QAASP,oCAAG,CAACH,CAAD,CAAO,CAMjB,IALA,IAAIW,EAAO,CACTC,MAAO,CADE,CAETC,IAAKb,CAAAc,OAFI,CAAX,CAIIC,EAAIJ,CAJR,CAKSK,EAAI,CALb,CAKgBC,EAAIjB,CAAAc,OAApB,CAAiCE,CAAjC,CAAqCC,CAArC,CAAwCD,CAAA,EAAxC,CACE,GAAIhB,CAAA,CAAKgB,CAAL,CAAJ,GAAgBE,0CAAhB,CAA4B,CACrBH,CAAAI,MAAL,GACEJ,CAAAI,MADF,CACY,EADZ,CAGA,KAAIC,EAAIL,CAAR,CAEAA,EAAI,CACFH,MAAOI,CAAPJ,CAAW,CADT,CAEFS,OAAQD,CAFN,CAGFE,SAJaF,CAAAD,MAAAG,CAAQF,CAAAD,MAAAL,OAARQ,CAAyB,CAAzBA,CACX,CAKJF,EAAAD,MAAAI,KAAA,CAAaR,CAAb,CAX0B,CAA5B,IAYWf,EAAA,CAAKgB,CAAL,CAAJ,GAAgBQ,2CAAhB,GACLT,CAAAF,IACA,CADQG,CACR,CADY,CACZ,CAAAD,CAAA,CAAIA,CAAAM,OAAJ,EAAgBV,CAFX,CAKT,OAAOA,EAxBU;AA4BnBc,QAASvB,yCAAQ,CAACwB,CAAD,CAAO1B,CAAP,CAAa,CAC5B,IAAI2B,EAAI3B,CAAA4B,UAAA,CAAeF,CAAAd,MAAf,CAA2Bc,CAAAb,IAA3B,CAAsC,CAAtC,CACRa,EAAAG,cAAA,CAAqBH,CAAArB,QAArB,CAAoCsB,CAAAG,KAAA,EAChCJ,EAAAL,OAAJ,GAEEM,CASA,CATI3B,CAAA4B,UAAA,CADKF,CAAAJ,SAAAS,CAAgBL,CAAAJ,SAAAT,IAAhBkB,CAAoCL,CAAAL,OAAAT,MACzC,CAAmBc,CAAAd,MAAnB,CAAgC,CAAhC,CASJ,CARAe,CAQA,CARIK,qDAAA,CAAsBL,CAAtB,CAQJ,CAPAA,CAOA,CAPIA,CAAArB,QAAA,CAAUC,kCAAA0B,eAAV,CAA6B,GAA7B,CAOJ,CAJAN,CAIA,CAJIA,CAAAC,UAAA,CAAYD,CAAAO,YAAA,CAAc,GAAd,CAAZ,CAAiC,CAAjC,CAIJ,CAHIC,CAGJ,CAHQT,CAAAU,eAGR,CAH8BV,CAAAW,SAG9B,CAH8CV,CAAAG,KAAA,EAG9C,CAFAJ,CAAAY,OAEA,CAFuC,CAEvC,GAFeH,CAAAI,QAAA,CAAUC,wCAAV,CAEf,CAAId,CAAAY,OAAJ,CACiC,CAA/B,GAAIH,CAAAI,QAAA,CAAUE,2CAAV,CAAJ;AACEf,CAAAgB,KADF,CACcC,qCAAAC,WADd,CAEWT,CAAAU,MAAA,CAAQtC,kCAAAuC,cAAR,CAFX,GAGEpB,CAAAgB,KACA,CADYC,qCAAAI,eACZ,CAAArB,CAAAsB,cAAA,CACEtB,CAAAW,SAAAY,MAAA,CAAoB1C,kCAAA0B,eAApB,CAAAiB,IAAA,EALJ,CADF,CAS+B,CAA7B,GAAIf,CAAAI,QAAA,CAAUY,yCAAV,CAAJ,CACEzB,CAAAgB,KADF,CACcC,qCAAAS,WADd,CAGE1B,CAAAgB,KAHF,CAGcC,qCAAAU,WAvBlB,CA4BA,IADIC,CACJ,CADS5B,CAAAP,MACT,CACE,IADM,IACGH,EAAI,CADP,CACUC,EAAIqC,CAAAxC,OADd,CACyByC,CAA/B,CACGvC,CADH,CACOC,CADP,GACcsC,CADd,CACkBD,CAAA,CAAGtC,CAAH,CADlB,EAC0BA,CAAA,EAD1B,CAEEd,wCAAA,CAASqD,CAAT;AAAYvD,CAAZ,CAGJ,OAAO0B,EArCqB,CA0C9B8B,QAASxB,sDAAqB,CAACG,CAAD,CAAI,CAChC,MAAOA,EAAA7B,QAAA,CAAU,uBAAV,CAAmC,QAAQ,CAAA,CAAA,CAAA,CAAA,CAAG,CAC/CmD,CAAAA,CAAO,CAEX,KADEC,CACF,CADW,CACX,CADeD,CAAA3C,OACf,CAAO4C,CAAA,EAAP,CAAA,CACED,CAAA,CAAO,GAAP,CAAaA,CAEf,OAAO,IAAP,CAAcA,CANqC,CAA9C,CADyB;AAY3BE,QAASC,0CAAS,CAAClC,CAAD,CAAOmC,CAAP,CAA2B7D,CAA3B,CAAiC,CACxDA,CAAA,CAAOA,CAAP,EAAe,EAEf,KAAIK,EAAU,EACd,IAAIqB,CAAArB,QAAJ,EAAoBqB,CAAAP,MAApB,CAAgC,CAC9B,IAAImC,EAAK5B,CAAAP,MACT,IAAImC,CAAJ,EAAW,CAAAQ,8CAAA,CAAeR,CAAf,CAAX,CACE,IAD6B,IACpBtC,EAAI,CADgB,CACbC,EAAIqC,CAAAxC,OADS,CACEyC,CAA/B,CACGvC,CADH,CACOC,CADP,GACcsC,CADd,CACkBD,CAAA,CAAGtC,CAAH,CADlB,EAC0BA,CAAA,EAD1B,CAEEX,CAAA,CAAUuD,yCAAA,CAAUL,CAAV,CAAaM,CAAb,CAAiCxD,CAAjC,CAHd,KAMEA,EAGA,CAHUwD,CAAA,CAAqBnC,CAAArB,QAArB,CACR0D,iDAAA,CAAkBrC,CAAArB,QAAlB,CAEF,EADAA,CACA,CADUA,CAAAyB,KAAA,EACV,IACEzB,CADF,CACY,IADZ,CACmBA,CADnB,CAC6B,IAD7B,CAX4B,CAiB5BA,CAAJ,GACMqB,CAAAW,SAIJ,GAHErC,CAGF,EAHU0B,CAAAW,SAGV,CAH0B,GAG1B,CAHgCnB,0CAGhC,CAH6C,IAG7C,EADAlB,CACA,EADQK,CACR,CAAIqB,CAAAW,SAAJ,GACErC,CADF,EACUwB,2CADV;AACwB,MADxB,CALF,CASA,OAAOxB,EA9BiD,CAiC1DgE,QAASF,+CAAc,CAAC3C,CAAD,CAAQ,CAC7B,MAAgD,EAAhD,GAAOA,CAAA,CAAM,CAAN,CAAAkB,SAAAE,QAAA,CAA0BY,yCAA1B,CADsB,CAI/Bc,QAASF,kDAAiB,CAAC1D,CAAD,CAAU,CAClCA,CAAA,CAAU6D,0DAAA,CAA2B7D,CAA3B,CACV,OAAO8D,sDAAA,CAAsB9D,CAAtB,CAF2B;AAK7B+D,QAASF,2DAA0B,CAAC7D,CAAD,CAAU,CAClD,MAAOA,EAAAC,QAAA,CACIC,kCAAA8D,WADJ,CACmB,EADnB,CAAA/D,QAAA,CAEIC,kCAAA+D,UAFJ,CAEkB,EAFlB,CAD2C,CAMpDC,QAASJ,sDAAqB,CAAC9D,CAAD,CAAU,CACtC,MAAOA,EAAAC,QAAA,CACIC,kCAAAiE,WADJ,CACmB,EADnB,CAAAlE,QAAA,CAEIC,kCAAAkE,SAFJ,CAEiB,EAFjB,CAD+B;AAMjC,IAAI9B,sCAAQ,CACjBU,WAAY,CADK,CAEjBN,eAAgB,CAFC,CAGjBH,WAAY,CAHK,CAIjBQ,WAAY,GAJK,CAAZ,CAOHlC,2CAAa,GAPV,CAQHM,4CAAc,GARX,CAWHjB,mCAAK,CACPC,SAAU,mCADH,CAEPC,KAAM,kBAFC,CAGP4D,WAAY,mDAHL,CAIPC,UAAW,4DAJJ,CAKPE,WAAY,yCALL,CAMPC,SAAU,2CANH;AAOP3B,cAAe,mBAPR,CAQPb,eAAgB,MART,CAXF,CAsBHkB,0CAAY,IAtBT,CAuBHV,4CAAc,QAvBX,CAwBHD,yCAAW,GAEXkC,OAAAC,IAAJ,GACED,MAAA,SADF,CACuB,CACnB3E,MAAAD,qCADmB,CAEnB8D,UAAAD,yCAFmB,CAGnBhB,MAAAiC,qCAHmB,CAInBV,2BAAAE,0DAJmB,CADvB,CA7KgBS,+BAAA9E,MAAA,CAAAA,qCA6FA8E;8BAAAjB,UAAA,CAAAA,yCA0CAiB,+BAAAX,2BAAA,CAAAA,0DAYLW,+BAAAlC,MAAA,CAAAA,qC,CC1JV,IAAA,oCAAA,EAAA,CAAUmC,kDAAuB,CAACJ,MAAAK,SAAxBD,EAA2C,CAACJ,MAAAK,SAAAC,MAAtD,CAGGC,4DAAyBP,MAAAQ,SAAAC,OAAAtC,MAAA,CAA6B,6BAA7B,CAH5B,CAOUuC,wDAAqB,CAACH,2DAAtBG,EACV,CAACC,SAAAC,UAAAzC,MAAA,CAA0B,iBAA1B,CADSuC,EAEXV,MAAAa,IAFWH,EAEGG,GAAAC,SAFHJ,EAEmBG,GAAAC,SAAA,CAAa,YAAb,CAA2B,kBAA3B,CAG9BC;QAASC,uDAAiB,EAAG,CAC3B,IAAIC,EAAQC,QAAAC,cAAA,CAAuB,OAAvB,CACZF,EAAAG,YAAA,CAAoB,uBACpBF,SAAAG,KAAAC,YAAA,CAA0BL,CAA1B,CACA,KAAIM,EAAsE,CAAtEA,EAAkBN,CAAAO,MAAAC,SAAA,CAAqB,CAArB,CAAA9F,QAAAkC,QAAA,CAAwC,OAAxC,CACtBqD,SAAAG,KAAAK,YAAA,CAA0BT,CAA1B,CACA,OAAOM,EANoB,CAStB,IAAIA,oDAAiB,CAAA,CArBjBI,oCAAAvB,aAAA,CAAAA,iDAOAuB,oCAAAjB,mBAAA,CAAAA,uDAcAiB;mCAAAJ,eAAA,CAAAA,mD,CCrBV,IAAA,gCAAA,EAGMK,SAASC,2CAAU,CAACpF,CAAD,CAAQqF,CAAR,CAAkB,CACrB,QAArB,GAAI,MAAOrF,EAAX,GACEA,CADF,CACU0D,8BAAA9E,MAAA,CAAMoB,CAAN,CADV,CAGIqF,EAAJ,EACEC,4CAAA,CAAYtF,CAAZ,CAAmBqF,CAAnB,CAEF,OAAO3B,+BAAAjB,UAAA,CAAUzC,CAAV,CAAiBkF,mCAAAjB,mBAAjB,CAPmC,CAUrCsB,QAASC,+CAAa,CAAChB,CAAD,CAAQ,CAC9BiB,CAAAjB,CAAAiB,WAAL,EAAyBjB,CAAAG,YAAzB,GACEH,CAAAiB,WADF,CACqB/B,8BAAA9E,MAAA,CAAM4F,CAAAG,YAAN,CADrB,CAGA,OAAOH,EAAAiB,WAJ4B;AAU9BC,QAASC,qDAAmB,CAACC,CAAD,CAAO,CACxC,MAAOA,EAAA1F,OAAP,EACA0F,CAAA1F,OAAAqB,KADA,GACqBmC,8BAAAlC,MAAAI,eAFmB;AAKnCiE,QAASP,6CAAW,CAAC/E,CAAD,CAAOuF,CAAP,CAA0BC,CAA1B,CAAiDC,CAAjD,CAAkE,CAC3F,GAAKzF,CAAL,CAAA,CAGA,IAAI0F,EAAY,CAAA,CAChB,IAAID,CAAJ,EACMzF,CAAAgB,KADN,GACoBmC,8BAAAlC,MAAAC,WADpB,CACsC,CAClC,IAAIyE,EAAa3F,CAAAW,SAAAQ,MAAA,CAAoByE,mCAAAC,YAApB,CACbF,EAAJ,GAEO3C,MAAA2C,WAAA,CAAkBA,CAAA,CAAW,CAAX,CAAlB,CAAAG,QAFP,GAGIJ,CAHJ,CAGgB,CAAA,CAHhB,EAFkC,CAUlC1F,CAAAgB,KAAJ,GAAkBmC,8BAAAlC,MAAAU,WAAlB,CACE4D,CAAA,CAAkBvF,CAAlB,CADF,CAEWwF,CAAJ,EACLxF,CAAAgB,KADK,GACSmC,8BAAAlC,MAAAI,eADT,CAELmE,CAAA,CAAsBxF,CAAtB,CAFK,CAGIA,CAAAgB,KAHJ,GAGkBmC,8BAAAlC,MAAAS,WAHlB,GAILgE,CAJK,CAIO,CAAA,CAJP,CAOP,KADI9D,CACJ,CADS5B,CAAAP,MACT,GAAWiG,CAAAA,CAAX,CACE,IAASpG,IAAAA,EAAE,CAAFA,CAAKC,EAAEqC,CAAAxC,OAAPE,CAAkBuC,CAA3B,CAA+BvC,CAA/B;AAAiCC,CAAjC,GAAwCsC,CAAxC,CAA0CD,CAAA,CAAGtC,CAAH,CAA1C,EAAkDA,CAAA,EAAlD,CACEyF,4CAAA,CAAYlD,CAAZ,CAAe0D,CAAf,CAAkCC,CAAlC,CAAyDC,CAAzD,CA1BJ,CAD2F,CAiCtFM,QAASC,0CAAQ,CAACrH,CAAD,CAAUsH,CAAV,CAAmBC,CAAnB,CAA2BC,CAA3B,CAAwC,CAC1DlC,CAAAA,CAAQmC,iDAAA,CAAiBzH,CAAjB,CAA0BsH,CAA1B,CACZ,OAAOI,4CAAA,CAAWpC,CAAX,CAAkBiC,CAAlB,CAA0BC,CAA1B,CAFuD,CAKzDG,QAASD,4CAAU,CAACpC,CAAD,CAAQiC,CAAR,CAAgBC,CAAhB,CAA6B,CACrDD,CAAA,CAASA,CAAT,EAAmBhC,QAAAG,KACfkC,EAAAA,CAASJ,CAATI,EAAwBJ,CAAAK,YAAxBD,EACJL,CAAAO,WACAC,mDAAA,CAAoBzC,CACpB,OAAOiC,EAAAS,aAAA,CAAoB1C,CAApB,CAA2BsC,CAA3B,CAL8C;AAQhDK,QAASR,kDAAgB,CAACzH,CAAD,CAAUsH,CAAV,CAAmB,CACjD,IAAIhC,EAAQC,QAAAC,cAAA,CAAuB,OAAvB,CACR8B,EAAJ,EACEhC,CAAA4C,aAAA,CAAmB,OAAnB,CAA4BZ,CAA5B,CAEFhC,EAAAG,YAAA,CAAoBzF,CACpB,OAAOsF,EAN0C,CASnD,IAAIyC,mDAAoB,IAGjBI;QAASC,uDAAqB,CAACd,CAAD,CAAU,CACzCe,CAAAA,CAAc9C,QAAA+C,cAAA,CAAuB,wBAAvB,CAChBhB,CADgB,CACN,GADM,CAIlB,KAAIiB,EAAQhD,QAAAG,KACZ6C,EAAAP,aAAA,CAAmBK,CAAnB,EAHYN,kDAAAH,CACVG,kDAAAF,YADUD,CACsB,IAElC,GAAyCW,CAAAT,WAAzC,CAEA,OADAC,mDACA,CADoBM,CAPyB,CAWxCG,QAASC,iDAAe,CAACC,CAAD,CAAY,CACzC,MAAO1C,oCAAAvB,aAAA,CAA6B,QAA7B,GAAeiE,CAAf,CAAsD,OAAtD,GAAwCA,CADN;AAWpCC,QAASC,iDAAe,CAACC,CAAD,CAAU,CACvC,MAAOA,EAAAC,aAAA,CAAqB,WAArB,CADgC,CAMzCC,QAASC,mDAAiB,CAACrJ,CAAD,CAAOY,CAAP,CAAc,CAEtC,IADA,IAAI0I,EAAQ,CAAZ,CACkBrI,EAAEjB,CAAAc,OAApB,CAAiCE,CAAjC,CAAqCC,CAArC,CAAwCD,CAAA,EAAxC,CACE,GAAgB,GAAhB,GAAIhB,CAAA,CAAKgB,CAAL,CAAJ,CACEsI,CAAA,EADF,KAEO,IAAgB,GAAhB,GAAItJ,CAAA,CAAKgB,CAAL,CAAJ,EACW,CADX,GACD,EAAEsI,CADD,CAEH,MAAOtI,EAIb,OAAQ,EAX8B;AAcjCuI,QAASC,4DAA0B,CAACC,CAAD,CAAMjD,CAAN,CAAgB,CAExD,IAAI5F,EAAQ6I,CAAAlH,QAAA,CAAY,MAAZ,CACZ,IAAe,EAAf,GAAI3B,CAAJ,CAEE,MAAO4F,EAAA,CAASiD,CAAT,CAAc,EAAd,CAAkB,EAAlB,CAAsB,EAAtB,CAGT,KAAI5I,EAAMwI,kDAAA,CAAkBI,CAAlB,CAAuB7I,CAAvB,CAA+B,CAA/B,CAAV,CACI8I,EAAQD,CAAA7H,UAAA,CAAchB,CAAd,CAAsB,CAAtB,CAAyBC,CAAzB,CADZ,CAEI8I,EAASF,CAAA7H,UAAA,CAAc,CAAd,CAAiBhB,CAAjB,CAETgJ,EAAAA,CAASJ,2DAAA,CAA2BC,CAAA7H,UAAA,CAAcf,CAAd,CAAoB,CAApB,CAA3B,CAAmD2F,CAAnD,CACb,KAAIqD,EAAQH,CAAAnH,QAAA,CAAc,GAAd,CAEZ,IAAe,EAAf,GAAIsH,CAAJ,CAEE,MAAOrD,EAAA,CAASmD,CAAT,CAAiBD,CAAA5H,KAAA,EAAjB,CAA+B,EAA/B,CAAmC8H,CAAnC,CAGLE,EAAAA,CAAQJ,CAAA9H,UAAA,CAAgB,CAAhB,CAAmBiI,CAAnB,CAAA/H,KAAA,EACRiI,EAAAA,CAAWL,CAAA9H,UAAA,CAAgBiI,CAAhB,CAAwB,CAAxB,CAAA/H,KAAA,EACf,OAAO0E,EAAA,CAASmD,CAAT,CAAiBG,CAAjB,CAAwBC,CAAxB,CAAkCH,CAAlC,CAtBiD;AAyBnD,IAAItC,oCAAK,CACd0C,WAAY,2EADE,CAEdC,YAAa,sCAFC,CAGdC,aAAc,2BAHA,CAIdC,gBAAiB,sCAJH,CAKd5C,YAAa,wBALC,CAMd6C,OAAQ,KANM,CAOdC,UAAW,YAPG,CAQdC,YAAa,eARC,CASdC,YAAa,iBATC,CAtJAC,gCAAAjE,UAAA,CAAAA,0CAUAiE;+BAAA7D,cAAA,CAAAA,8CAUA6D,gCAAA1D,oBAAA,CAAAA,oDAKA0D,gCAAA/D,YAAA,CAAAA,4CAiCA+D,gCAAA9C,SAAA,CAAAA,yCAKA8C,gCAAAzC,WAAA,CAAAA,2CAQAyC;+BAAA1C,iBAAA,CAAAA,iDAYA0C,gCAAA/B,sBAAA,CAAAA,sDAWA+B,gCAAA1B,gBAAA,CAAAA,gDAWA0B,gCAAAvB,gBAAA,CAAAA,gDAoBAuB,gCAAAhB,2BAAA,CAAAA,2DAyBLgB;+BAAAlD,GAAA,CAAAA,mC,CCxJV,IAAA,uCAAA,EAAA,CAwBUmD,yDAAmB,CAI5BC,IAAKA,QAAQ,CAAChJ,CAAD,CAAOkH,CAAP,CAAc+B,CAAd,CAAiC,CAExCjJ,CAAAkJ,cAAJ,CACElJ,CAAAkJ,cADF,CACuB,IADvB,CAGE,IAAAC,cAAA,CAAmBnJ,CAAnB,CAAyBkH,CAAzB,EAAkC,EAAlC,CAAsC+B,CAAtC,CAL0C,CAJlB,CAa5BE,cAAeA,QAAQ,CAACnJ,CAAD,CAAOW,CAAP,CAAiBsI,CAAjB,CAAoC,CACrDjJ,CAAAoJ,UAAJ,EACE,IAAA5B,QAAA,CAAaxH,CAAb,CAAmBW,CAAnB,CAA6BsI,CAA7B,CAKF,IAHII,CAGJ,CAH6B,UAApB,GAACrJ,CAAAsJ,UAAD,CACPC,CAACvJ,CAAAwJ,QAADD,EAAiBvJ,CAAAyJ,SAAjBF,YADO,CAEPvJ,CAAA0J,SACF,CACE,IAAK,IAAIpK,EAAE,CAAX,CAAcA,CAAd,CAAgB+J,CAAAjK,OAAhB,CAA2BE,CAAA,EAA3B,CACE,IAAA6J,cAAA,CAAmBE,CAAA,CAAG/J,CAAH,CAAnB,CAA0BqB,CAA1B,CAAoCsI,CAApC,CATqD,CAb/B,CA2B5BzB,QAASA,QAAQ,CAACA,CAAD,CAAUN,CAAV,CAAiB+B,CAAjB,CAAoC,CAInD,GAAI/B,CAAJ,CAEE,GAAIM,CAAA4B,UAAJ,CACMH,CAAJ,EACEzB,CAAA4B,UAAAO,OAAA,CAAyBC,kDAAzB,CACA;AAAApC,CAAA4B,UAAAO,OAAA,CAAyBzC,CAAzB,CAFF,GAIEM,CAAA4B,UAAAS,IAAA,CAAsBD,kDAAtB,CACA,CAAApC,CAAA4B,UAAAS,IAAA,CAAsB3C,CAAtB,CALF,CADF,KAQO,IAAIM,CAAAC,aAAJ,CAA0B,CAC/B,IAAIqC,EAAItC,CAAAC,aAAA,CAAqBsC,6CAArB,CACJd,EAAJ,CACMa,CADN,EAEItC,CAAAX,aAAA,CAAqBkD,6CAArB,CAA4BD,CAAAlL,QAAA,CAAUgL,kDAAV,CAAsB,EAAtB,CAAAhL,QAAA,CACnBsI,CADmB,CACZ,EADY,CAA5B,CAFJ,CAMEM,CAAAX,aAAA,CAAqBkD,6CAArB,EAA6BD,CAAA,CAAIA,CAAJ,CAAQ,GAAR,CAAc,EAA3C,EACAF,kDADA,CACa,GADb,CACmB1C,CADnB,CAR6B,CAdgB,CA3BzB,CAwD5B8C,cAAeA,QAAQ,CAACxC,CAAD;AAAUyC,CAAV,CAAsBnF,CAAtB,CAAgC,CACrD,IAAIoF,EAAe1C,CAAA2C,WAUnB,OAAO/J,CAHQuE,mCAAAvB,aAADzE,EAAkC,OAAlCA,GAAiBuL,CAAjBvL,CACdmK,+BAAAjE,UAAA,CAAoBoF,CAApB,CAAgCnF,CAAhC,CADcnG,CAEd,IAAAyL,IAAA,CAASH,CAAT,CAAqBzC,CAAA6C,GAArB,CAAiC7C,CAAA8C,QAAjC,CAAkDxF,CAAlD,CAFcnG,CAEgD,MACvDyB,MAAA,EAX8C,CAxD3B,CA0E5BgK,IAAKA,QAAQ,CAAC3K,CAAD,CAAQyH,CAAR,CAAeqD,CAAf,CAAoBzF,CAApB,CAA8B,CACzC,IAAI0F,EAAY,IAAAC,eAAA,CAAoBvD,CAApB,CAA2BqD,CAA3B,CAChBrD,EAAA,CAAQ,IAAAwD,kBAAA,CAAuBxD,CAAvB,CACR,KAAIyD,EAAO,IACX,OAAO7B,gCAAAjE,UAAA,CAAoBpF,CAApB,CAA2B,QAAQ,CAAC4F,CAAD,CAAO,CAC1CA,CAAAuF,SAAL,GACED,CAAAtF,KAAA,CAAUA,CAAV,CAAgB6B,CAAhB,CAAuBsD,CAAvB,CACA,CAAAnF,CAAAuF,SAAA,CAAgB,CAAA,CAFlB,CAII9F,EAAJ,EACEA,CAAA,CAASO,CAAT,CAAe6B,CAAf,CAAsBsD,CAAtB,CAN6C,CAA1C,CAJkC,CA1Ef,CAyF5BE,kBAAmBA,QAAS,CAACxD,CAAD,CAAQ,CAClC,MAAIA,EAAJ,CACS2D,wDADT,CAC4B3D,CAD5B,CAGS,EAJyB,CAzFR,CAiG5BuD,eAAgBA,QAAQ,CAACvD,CAAD;AAAQqD,CAAR,CAAa,CACnC,MAAOA,EAAA,CAAM,MAAN,CAAgBrD,CAAhB,CAAwB,GAAxB,CAA8BA,CADF,CAjGT,CAqG5B7B,KAAMA,QAAS,CAACA,CAAD,CAAO6B,CAAP,CAAcsD,CAAd,CAAyB,CACtC,IAAAM,eAAA,CAAoBzF,CAApB,CAA0B,IAAA0F,0BAA1B,CACE7D,CADF,CACSsD,CADT,CADsC,CArGZ,CA2G5BM,eAAgBA,QAAQ,CAACzF,CAAD,CAAO2F,CAAP,CAAoB9D,CAApB,CAA2BsD,CAA3B,CAAsC,CAG5DnF,CAAA1E,SAAA,CAAgB0E,CAAA4F,oBAAhB,CACE,IAAAC,kBAAA,CAAuB7F,CAAvB,CAA6B2F,CAA7B,CAA0C9D,CAA1C,CAAiDsD,CAAjD,CAJ0D,CA3GlC,CAkH5BU,kBAAmBA,QAAQ,CAAC7F,CAAD,CAAO2F,CAAP,CAAoB9D,CAApB,CAA2BsD,CAA3B,CAAsC,CAC/D,IAAIW,EAAK9F,CAAA1E,SAAAY,MAAA,CAAoB6J,4DAApB,CAGT,IAAK,CAAAtC,+BAAA1D,oBAAA,CAA8BC,CAA9B,CAAL,CAA0C,CAC/B/F,CAAAA,CAAE,CAAX,KADwC,IAC1BC,EAAE4L,CAAA/L,OADwB,CACbM,CAA3B,CAA+BJ,CAA/B,CAAiCC,CAAjC,GAAwCG,CAAxC,CAA0CyL,CAAA,CAAG7L,CAAH,CAA1C,EAAkDA,CAAA,EAAlD,CACE6L,CAAA,CAAG7L,CAAH,CAAA,CAAQ0L,CAAAK,KAAA,CAAiB,IAAjB,CAAuB3L,CAAvB,CAA0BwH,CAA1B,CAAiCsD,CAAjC,CAF8B,CAK1C,MAAOW,EAAAG,KAAA,CAAQF,4DAAR,CATwD,CAlHrC;AA8H5BL,0BAA2BA,QAAQ,CAACpK,CAAD,CAAWuG,CAAX,CAAkBsD,CAAlB,CAA6B,CAC9D,IAAIe,EAAO,CAAA,CAAX,CACIC,EAAc,CAAA,CADlB,CAEIb,EAAO,IACXhK,EAAA,CAAWA,CAAAP,KAAA,EACXO,EAAA,CAAWA,CAAA/B,QAAA,CAAiB6M,qDAAjB,CAAgCC,4CAAhC,CAAuC,KAAvC,CACX/K,EAAA,CAAWA,CAAA/B,QAAA,CAAiB+M,2DAAjB,CAAsC,QAAQ,CAACC,CAAD,CAAI9B,CAAJ,CAAOrJ,CAAP,CAAU,CAC5D8K,CAAL,CAOE9K,CAPF,CAOMA,CAAA7B,QAAA,CAAUiN,kDAAV,CAAsB,GAAtB,CAPN,EACMC,CAIJ,CAJWnB,CAAAoB,2BAAA,CAAgCtL,CAAhC,CAAmCqJ,CAAnC,CAAsC5C,CAAtC,CAA6CsD,CAA7C,CAIX,CAHAe,CAGA,CAHOA,CAGP,EAHeO,CAAAP,KAGf,CAFAC,CAEA,CAFcA,CAEd,EAF6BM,CAAAN,YAE7B,CADA1B,CACA,CADIgC,CAAAE,WACJ,CAAAvL,CAAA,CAAIqL,CAAA1D,MALN,CASA,OAAO0B,EAAP,CAAWrJ,CAVsD,CAAxD,CAYP+K,EAAJ,GACE7K,CADF,CACaA,CAAA/B,QAAA,CAAiBqN,0DAAjB;AACT,QAAQ,CAACL,CAAD,CAAIM,CAAJ,CAASC,CAAT,CAAgBC,CAAhB,CAAsB,CAC5B,MAAOF,EAAP,CAAaC,CAAb,CAAqB,GAArB,CAA2B3B,CAA3B,CAAuC4B,CAAvC,CACEhB,4DADF,CACyB,GADzB,CAC+Bc,CAD/B,CACqC1B,CADrC,CACiD2B,CADjD,CACyDC,CAF7B,CADrB,CADb,CAOA,OAAOzL,EAzBuD,CA9HpC,CA0J5BoL,2BAA4BA,QAAQ,CAACpL,CAAD,CAAWqL,CAAX,CAAuB9E,CAAvB,CAA8BsD,CAA9B,CAAyC,CAE3E,IAAI6B,EAAY1L,CAAA8C,OAAA,CAAgBoI,kDAAhB,CAAhB,CACIL,EAAc,CAAA,CACmB,EAArC,EAAI7K,CAAAE,QAAA,CAAiByL,oDAAjB,CAAJ,CACEd,CADF,CACgB,CAAA,CADhB,CAEoC,CAA7B,EAAI7K,CAAAE,QAAA,CAAiB6K,4CAAjB,CAAJ,CACL/K,CADK,CACM,IAAA4L,uBAAA,CAA4B5L,CAA5B,CAAsC6J,CAAtC,CADN,CAGkB,CAHlB,GAGI6B,CAHJ,GAIL1L,CAJK,CAIMuG,CAAA,CAAQ,IAAAsF,yBAAA,CAA8B7L,CAA9B,CAAwCuG,CAAxC,CAAR,CACTvG,CALG,CAQ0B,EAAjC,EAAIA,CAAAE,QAAA,CAAiB4L,+CAAjB,CAAJ;CACET,CADF,CACe,EADf,CAKIU,EAAAA,CAAU,CAAA,CACmB,EAAjC,EAAI/L,CAAAE,QAAA,CAAiB8L,+CAAjB,CAAJ,GACEX,CACA,CADa,EACb,CAAAU,CAAA,CAAU,CAAA,CAFZ,CAKA,KAAInB,CACa,EAAjB,EAAIc,CAAJ,GACEd,CAGE,CAHK,CAAA,CAGL,CAAA5K,CAAA,CAFE+L,CAAJ,CAEa/L,CAAA/B,QAAA,CAAiBgO,qDAAjB,CAAgC,QAAS,CAAChB,CAAD,CAAIiB,CAAJ,CAAY,CAC9D,MAAO,KAAP,CAAeA,CAD+C,CAArD,CAFb,CAOalM,CAAA/B,QAAA,CAAiBiN,kDAAjB,CAA6B,GAA7B,CATf,CAYA,OAAO,CAACzD,MAAOzH,CAAR,CAAkBqL,WAAYA,CAA9B,CAA0CT,KAAMA,CAAhD,CACLC,YAAaA,CADR,CAtCoE,CA1JjD,CAoM5BgB,yBAA0BA,QAAQ,CAAC7L,CAAD,CAAWuG,CAAX,CAAkB,CAC9CiE,CAAAA,CAAKxK,CAAAY,MAAA,CAAeuL,qDAAf,CACT3B,EAAA,CAAG,CAAH,CAAA,EAASjE,CACT,OAAOiE,EAAAG,KAAA,CAAQwB,qDAAR,CAH2C,CApMxB;AA2M5BP,uBAAwBA,QAAQ,CAAC5L,CAAD,CAAW6J,CAAX,CAAsB,CACpD,IAAIoB,EAAIjL,CAAAQ,MAAA,CAAe4L,kDAAf,CAER,OAAA,CADIZ,CACJ,CADYP,CACZ,EADiBA,CAAA,CAAE,CAAF,CAAAxL,KAAA,EACjB,EADgC,EAChC,EACO+L,CAAA,CAAM,CAAN,CAAAhL,MAAA,CAAe6L,8DAAf,CAAL,CAcSrM,CAAA/B,QAAA,CAAiBmO,kDAAjB,CAA6B,QAAQ,CAACnB,CAAD,CAAIqB,CAAJ,CAAUd,CAAV,CAAiB,CAC3D,MAAO3B,EAAP,CAAmB2B,CADwC,CAAtD,CAdT,CAEqBA,CAAA5K,MAAA,CAAYyL,8DAAZ,CAAAE,CAAoC,CAApCA,CAEnB,GAAqB1C,CAArB,CACS2B,CADT,CAKSgB,yDAVb,CAyBSxM,CAAA/B,QAAA,CAAiB8M,4CAAjB,CAAuBlB,CAAvB,CA5B2C,CA3M1B,CA2O5B4C,aAAcA,QAAQ,CAAC/H,CAAD,CAAO,CAE3BA,CAAA1E,SAAA;AAAgB0E,CAAA3E,eAChB,KAAA2M,sBAAA,CAA2BhI,CAA3B,CACA,KAAAyF,eAAA,CAAoBzF,CAApB,CAA0B,IAAAiI,2BAA1B,CAJ2B,CA3OD,CAkP5BD,sBAAuBA,QAAQ,CAAChI,CAAD,CAAO,CAChCA,CAAA1E,SAAJ,GAAsB4M,4CAAtB,GACElI,CAAA1E,SADF,CACkB,MADlB,CADoC,CAlPV,CAwP5B2M,2BAA4BA,QAAQ,CAAC3M,CAAD,CAAW,CAC7C,MAAOA,EAAAQ,MAAA,CAAe0K,kDAAf,CAAA,CACL,IAAAd,0BAAA,CAA+BpK,CAA/B,CAAyC6M,0DAAzC,CADK,CAEL,IAAAhB,yBAAA,CAA8B7L,CAAAP,KAAA,EAA9B,CAA+CoN,0DAA/C,CAH2C,CAxPnB;AA8P5B5D,WAAY,aA9PgB,CAxB7B,CAyRGA,mDAAab,wDAAAa,WAzRhB,CA0RG4D,2DAAqB,QAArBA,CAAgC5D,kDAAhC4D,CACF,UADEA,CACS5D,kDADT4D,CACsB,GA3RzB,CA4RGpC,6DAAuB,GA5R1B,CA6RGO,4DAAsB,yCA7RzB,CA8RGqB;AAAyB,SA9R5B,CA+RGtB,6CAAO,OA/RV,CAgSG6B,6CAAO,OAhSV,CAoSGR,mDAAa,0CApShB,CAqSGT,qDAAe,eArSlB,CAsSGL,2DAAqB,4DAtSxB,CAwSGQ,gDAAU,WAxSb,CAySGE;AAAU,WAzSb,CA2SGC,sDAAgB,gDA3SnB,CA6SGf,mDAAa,uCA7ShB,CA8SGhB,yDAAmB,GA9StB,CA+SGiC,sDAAgB,GA/SnB,CAgTG/C,8CAAQ,OAhTX,CAiTG0B,sDAAgB,IAAIgC,MAAJ,CAAW,IAAX,CAAkBhB,+CAAlB,CAA4B,GAA5B,CAjTnB;AAkTGU,0DAAoB,kBA1RbO,uCAAA3E,iBAAA,CAAAA,wD,CCzBV,IAAA,sCAAA,EAAA,CAMGrJ,yCAAIsD,MAAA2K,QAAAC,UANP,CAOGC,uDAAkBnO,wCAAAoG,QAAlB+H,EAA+BnO,wCAAAmO,gBAA/BA,EACFnO,wCAAAoO,mBADED,EACsBnO,wCAAAqO,kBADtBF,EAEFnO,wCAAAsO,iBAFEH,EAEoBnO,wCAAAuO,sBATvB;AAWGC,6CAAQvK,SAAAC,UAAAzC,MAAA,CAA0B,SAA1B,CAXX,CAaUgN,uDAAkB,CAI3BC,eAAgBA,QAAQ,CAAC3O,CAAD,CAAQyH,CAAR,CAAe,CAAA,IACjCyD,EAAO,IAD0B,CACpB0D,EAAQ,EADY,CACRC,EAAY,EADJ,CACQC,EAAY,CADpB,CAEjCC,EAAgBd,sCAAA3E,iBAAA0B,eAAA,CAAgCvD,CAAAmD,GAAhC,CAA0CnD,CAAAoD,QAA1C,CAFiB,CAGjCmE,EAAWhP,CAAA0K,WACfrB,gCAAA/D,YAAA,CAAsBtF,CAAtB,CAA6B,QAAQ,CAAC4F,CAAD,CAAO,CAC1CsF,CAAA+D,aAAA,CAAkBrJ,CAAlB,CAEAA,EAAAsJ,MAAA,CAAaJ,CAAA,EACb5D,EAAAiE,mBAAA,CAAwB1H,CAAxB,CAA+B7B,CAA/B,CAAqCoJ,CAArC,CAA+C,QAAQ,CAAC3C,CAAD,CAAO,CAExDzG,CAAA1F,OAAAqB,KAAJ,GAAyB8H,+BAAA+F,UAAA3N,WAAzB,GACEgG,CAAA4H,yBADF;AACmC,CAAA,CADnC,CAGIhD,EAAAiD,OAAJ,GAGMC,CAGJ,CAH4BlD,CAAAnL,SAAAY,MAAA,CAAoB,GAApB,CAAA0N,KAAA,CAA8B,QAAQ,CAACxO,CAAD,CAAI,CACpE,MAAoC,EAApC,GAAOA,CAAAI,QAAA,CAAU2N,CAAV,CAAP,EAAyC/N,CAAArB,OAAzC,GAAsDoP,CAAApP,OADc,CAA1C,CAG5B,CAAA8H,CAAA4H,yBAAA,CAAiC5H,CAAA4H,yBAAjC,EAAmEE,CANrE,CAL4D,CAA9D,CAcArE,EAAAuE,2BAAA,CAAgC7J,CAAA8J,aAAAxQ,QAAhC,CAA2D0P,CAA3D,CAlB0C,CAA5C,CAmBGe,QAAwB,CAAC/J,CAAD,CAAO,CAChCiJ,CAAAzO,KAAA,CAAewF,CAAf,CADgC,CAnBlC,CAuBA5F,EAAA4P,WAAA,CAAmBf,CAEfgB,EAAAA,CAAQ,EACZ,KAAKhQ,IAAIA,CAAT,GAAc+O,EAAd,CACEiB,CAAAzP,KAAA,CAAWP,CAAX,CAEF,OAAOgQ,EAjC8B,CAJZ,CAyC3BZ,aAAcA,QAAQ,CAACrJ,CAAD,CAAO,CAC3B,GAAIA,CAAA8J,aAAJ,CACE,MAAO9J,EAAA8J,aAFkB,KAIvBrD,EAAO,EAJgB,CAIZyD,EAAa,EACR,KAAAC,kBAAAC,CAAuBpK,CAAvBoK,CAA6BF,CAA7BE,CACpB,GACE3D,CAAAyD,WAEA,CAFkBA,CAElB,CAAAlK,CAAA5F,MAAA,CAAa,IAHf,CAKAqM,EAAAnN,QAAA,CAAe,IAAA+Q,eAAA,CAAoBrK,CAApB,CAEf,OADAA,EAAA8J,aACA,CADoBrD,CAZO,CAzCF,CA0D3B0D,kBAAmBA,QAAQ,CAACnK,CAAD;AAAOkK,CAAP,CAAmB,CAC5C,IAAIzD,EAAOzG,CAAA8J,aACX,IAAIrD,CAAJ,CACE,IAAIA,CAAAyD,WAAJ,CAEE,MADAI,OAAAC,OAAA,CAAcL,CAAd,CAA0BzD,CAAAyD,WAA1B,CACO,CAAA,CAAA,CAFT,CADF,IAKO,CAKL,IAJO3J,IAAAA,EAAK,IAAAA,GAAA0C,WAAL1C,CACHjH,EAAU0G,CAAAlF,cADPyF,CAEHwC,CAEJ,CAAQwD,CAAR,CAAYhG,CAAAiK,KAAA,CAAQlR,CAAR,CAAZ,CAAA,CAA+B,CAE7ByJ,CAAA,CAAQhI,CAACwL,CAAA,CAAE,CAAF,CAADxL,EAASwL,CAAA,CAAE,CAAF,CAATxL,MAAA,EAER,IAAc,SAAd,GAAIgI,CAAJ,EAAqC,OAArC,GAA2BA,CAA3B,CACEmH,CAAA,CAAW3D,CAAA,CAAE,CAAF,CAAAxL,KAAA,EAAX,CAAA,CAA0BgI,CAE5B0H,EAAA,CAAM,CAAA,CAPuB,CAS/B,MAAOA,EAdF,CAPqC,CA1DnB,CAqF3BJ,eAAgBA,QAAQ,CAACrK,CAAD,CAAO,CAC7B,MAAO,KAAA0K,wBAAA,CAA6B1K,CAAAlF,cAA7B,CADsB,CArFJ,CA2F3B4P,wBAAyBA,QAAQ,CAACpR,CAAD,CAAU,CACzC,MAAOA,EAAAC,QAAA,CAAgB,IAAAgH,GAAA+C,UAAhB,CAAmC,EAAnC,CAAA/J,QAAA,CACI,IAAAgH,GAAA0C,WADJ,CACwB,EADxB,CADkC,CA3FhB,CAgG3B4G,2BAA4BA,QAAQ,CAACvQ,CAAD,CAAU0P,CAAV,CAAiB,CAEnD,IADA,IAAIzC,CACJ,CAAQA,CAAR,CAAY,IAAAhG,GAAA4C,aAAAqH,KAAA,CAA0BlR,CAA1B,CAAZ,CAAA,CAAiD,CAC/C,IAAIqR;AAAOpE,CAAA,CAAE,CAAF,CAGE,IAAb,GAAIA,CAAA,CAAE,CAAF,CAAJ,GACEyC,CAAA,CAAM2B,CAAN,CADF,CACgB,CAAA,CADhB,CAJ+C,CAFE,CAhG1B,CA6G3BC,MAAOA,QAAQ,CAAC5B,CAAD,CAAQ,CAIrB,IADA,IAAIiB,EAAQK,MAAAO,oBAAA,CAA2B7B,CAA3B,CAAZ,CACS/O,EAAE,CADX,CACcD,CAAd,CAAiBC,CAAjB,CAAqBgQ,CAAAlQ,OAArB,CAAmCE,CAAA,EAAnC,CACED,CACA,CADIiQ,CAAA,CAAMhQ,CAAN,CACJ,CAAA+O,CAAA,CAAMhP,CAAN,CAAA,CAAW,IAAA8Q,iBAAA,CAAsB9B,CAAA,CAAMhP,CAAN,CAAtB,CAAgCgP,CAAhC,CANQ,CA7GI,CA8H3B8B,iBAAkBA,QAAQ,CAACC,CAAD,CAAW/B,CAAX,CAAkB,CAG1C,GAAI+B,CAAJ,CACE,GAA4B,CAA5B,EAAIA,CAAAvP,QAAA,CAAiB,GAAjB,CAAJ,CACEuP,CAAA,CAAW,IAAAC,mBAAA,CAAwBD,CAAxB,CAAkC/B,CAAlC,CADb,KAEO,CAEL,IAAI1D,EAAO,IAmBXyF,EAAA,CAAWtH,+BAAAhB,2BAAA,CAAqCsI,CAArC,CAlBFE,QAAQ,CAACrI,CAAD,CAASG,CAAT,CAAgBC,CAAhB,CAA0BH,CAA1B,CAAkC,CACjD,GAAKE,CAAAA,CAAL,CACE,MAAOH,EAAP,CAAgBC,CAIlB,EAFIqI,CAEJ,CAFoB5F,CAAAwF,iBAAA,CAAsB9B,CAAA,CAAMjG,CAAN,CAAtB,CAAoCiG,CAApC,CAEpB,GAAwC,SAAxC,GAAsBkC,CAAtB,CAI6B,oBAJ7B,GAIWA,CAJX,GAQEA,CARF,CAQkB,SARlB,EAEEA,CAFF,CAEkB5F,CAAAwF,iBAAA,CAAsB9B,CAAA,CAAMhG,CAAN,CAAtB,EAAyCA,CAAzC,CAAmDgG,CAAnD,CAFlB,EAGEhG,CAHF,EAGc,OAOd,OAAOJ,EAAP,EAAiBsI,CAAjB,EAAkC,EAAlC,EAAwCrI,CAhBS,CAkBxC,CArBN,CAwBT,MAAOkI,EAAP;AAAmBA,CAAAhQ,KAAA,EAAnB,EAAsC,EA9BI,CA9HjB,CAgK3BiQ,mBAAoBA,QAAQ,CAACD,CAAD,CAAW/B,CAAX,CAAkB,CACxCmC,CAAAA,CAAQJ,CAAA7O,MAAA,CAAe,GAAf,CACZ,KAF4C,IAEnCjC,EAAE,CAFiC,CAE9BI,CAF8B,CAE3BkM,CAAjB,CAAoBtM,CAApB,CAAsBkR,CAAApR,OAAtB,CAAoCE,CAAA,EAApC,CACE,GAAKI,CAAL,CAAS8Q,CAAA,CAAMlR,CAAN,CAAT,CAAoB,CAClB,IAAAsG,GAAA2C,YAAAkI,UAAA,CAAgC,CAEhC,IADA7E,CACA,CADI,IAAAhG,GAAA2C,YAAAsH,KAAA,CAAyBnQ,CAAzB,CACJ,CACEA,CAAA,CAAI,IAAAyQ,iBAAA,CAAsB9B,CAAA,CAAMzC,CAAA,CAAE,CAAF,CAAN,CAAtB,CAAmCyC,CAAnC,CADN,KAIE,IADIqC,CACA,CADQhR,CAAAmB,QAAA,CAAU,GAAV,CACR,CAAW,EAAX,GAAA6P,CAAJ,CAAkB,CAChB,IAAIC,EAAKjR,CAAAQ,UAAA,CAAYwQ,CAAZ,CAAT,CACAC,EAAKA,CAAAvQ,KAAA,EADL,CAEAuQ,EAAK,IAAAR,iBAAA,CAAsBQ,CAAtB,CAA0BtC,CAA1B,CAALsC,EAAyCA,CACzCjR,EAAA,CAAIA,CAAAQ,UAAA,CAAY,CAAZ,CAAewQ,CAAf,CAAJ,CAA4BC,CAJZ,CAOpBH,CAAA,CAAMlR,CAAN,CAAA,CAAYI,CAAD,EAAMA,CAAAc,YAAA,CAAc,GAAd,CAAN,GAA6Bd,CAAAN,OAA7B,CAAwC,CAAxC,CAETM,CAAAkR,MAAA,CAAQ,CAAR,CAAY,EAAZ,CAFS,CAGTlR,CAHS,EAGJ,EAjBW,CAoBtB,MAAO8Q,EAAAlF,KAAA,CAAW,GAAX,CAvBqC,CAhKnB,CA0L3BuF,gBAAiBA,QAAQ,CAACxL,CAAD,CAAOgJ,CAAP,CAAc,CACrC,IAAIyC,EAAS,EAERzL,EAAA8J,aAAL,EACE,IAAAT,aAAA,CAAkBrJ,CAAlB,CAEEA,EAAA8J,aAAAxQ,QAAJ;CACEmS,CADF,CACW,IAAAT,mBAAA,CAAwBhL,CAAA8J,aAAAxQ,QAAxB,CAAmD0P,CAAnD,CADX,CAGAhJ,EAAA1G,QAAA,CAAemS,CATsB,CA1LZ,CAyM3BC,wBAAyBA,QAAQ,CAAC1L,CAAD,CAAO2L,CAAP,CAA2B,CAC1D,IAAIC,EAAQ5L,CAAA1G,QAAZ,CACImS,EAASzL,CAAA1G,QACa,KAA1B,EAAI0G,CAAA6L,cAAJ,GAEE7L,CAAA6L,cAFF,CAEuB,IAAAtL,GAAA6C,gBAAA0I,KAAA,CAA6BF,CAA7B,CAFvB,CAKA,IAAI5L,CAAA6L,cAAJ,CAIE,GAAqC,IAArC,EAAI7L,CAAA+L,yBAAJ,CAA2C,CACzC/L,CAAA+L,yBAAA,CAAgC,EAChC,KAAKC,IAAIA,CAAT,GAAqBL,EAArB,CACEM,CAIA,CAJYN,CAAA,CAAmBK,CAAnB,CAIZ,CAHAP,CAGA,CAHSQ,CAAA,CAAUL,CAAV,CAGT,CAAIA,CAAJ,GAAcH,CAAd,GACEG,CACA,CADQH,CACR,CAAAzL,CAAA+L,yBAAAvR,KAAA,CAAmCwR,CAAnC,CAFF,CAPuC,CAA3C,IAYO,CAGL,IAAS/R,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoB+F,CAAA+L,yBAAAhS,OAApB,CAA0D,EAAEE,CAA5D,CACEgS,CACA,CADYN,CAAA,CAAmB3L,CAAA+L,yBAAA,CAA8B9R,CAA9B,CAAnB,CACZ,CAAA2R,CAAA,CAAQK,CAAA,CAAUL,CAAV,CAEVH,EAAA,CAASG,CAPJ,CAUT5L,CAAA1G,QAAA,CAAemS,CAlC2C,CAzMjC,CAgP3BS,uBAAwBA,QAAQ,CAAC9R,CAAD;AAAQ+H,CAAR,CAAiB,CAAA,IAC3C6G,EAAQ,EADmC,CAC/B1D,EAAO,IADwB,CAG3C6G,EAAI,EAER1I,gCAAA/D,YAAA,CAAsBtF,CAAtB,CAA6B,QAAQ,CAAC4F,CAAD,CAAO,CAGrCA,CAAA8J,aAAL,EACExE,CAAA+D,aAAA,CAAkBrJ,CAAlB,CAKF,KAAIoM,EAAkBpM,CAAA4F,oBAAlBwG,EAA8CpM,CAAA3E,eAC9C8G,EAAJ,EAAenC,CAAA8J,aAAAI,WAAf,EAA+CkC,CAA/C,EACM5D,sDAAAxC,KAAA,CAAqB7D,CAArB,CAA8BiK,CAA9B,CADN,GAEI9G,CAAA6E,kBAAA,CAAuBnK,CAAvB,CAA6BgJ,CAA7B,CAEA,CAAAqD,mDAAA,CAAarM,CAAAsJ,MAAb,CAAyB6C,CAAzB,CAJJ,CAV0C,CAA5C,CAiBG,IAjBH,CAiBS,CAAA,CAjBT,CAkBA,OAAO,CAACjC,WAAYlB,CAAb,CAAoBsD,IAAKH,CAAzB,CAvBwC,CAhPtB,CA0Q3B5C,mBAAoBA,QAAQ,CAAC1H,CAAD,CAAQ7B,CAAR,CAAcoJ,CAAd,CAAwB3J,CAAxB,CAAkC,CACvDO,CAAA8J,aAAL,EACE,IAAAT,aAAA,CAAkBrJ,CAAlB,CAEF,IAAKA,CAAA8J,aAAAI,WAAL,CAAA,CAGA,IAAI/E,EAAYtD,CAAAmD,GAAA;AAChBqD,sCAAA3E,iBAAA0B,eAAA,CAAgCvD,CAAAmD,GAAhC,CAA0CnD,CAAAoD,QAA1C,CADgB,CAEhB,MAFA,CAGI5J,EAAiB2E,CAAA3E,eAHrB,CAIIkR,EAA6B,WAA7BA,GAAUlR,CAAVkR,EAA+D,MAA/DA,GAA4ClR,CAJhD,CAKIqO,EAA6C,CAA7CA,GAASrO,CAAAG,QAAA,CAAuB,OAAvB,CAATkO,EAAkD,CAAC6C,CAItC,QAAjB,GAAInD,CAAJ,GAEEmD,CAEA,CAFSlR,CAET,GAF6B8J,CAE7B,CAFyC,OAEzC,CAFmDA,CAEnD,EAFqG,EAErG,GAFiE9J,CAAAG,QAAA,CAAuB,MAAvB,CAEjE,CAAAkO,CAAA,CAAS,CAAC6C,CAAV,EAA0D,CAA1D,GAAoBlR,CAAAG,QAAA,CAAuB2J,CAAvB,CAJtB,CAMiB,SAAjB,GAAIiE,CAAJ,GACEmD,CACA,CAD4B,WAC5B,GADSlR,CACT,EAD8D,MAC9D,GAD2CA,CAC3C,CAAAqO,CAAA,CAASA,CAAT,EAAmB,CAAC6C,CAFtB,CAIA,IAAKA,CAAL,EAAgB7C,CAAhB,CAGI0C,CAeJ,CAfsBjH,CAetB,CAdIuE,CAcJ,GAZMpK,mCAAAvB,aAUJ,EAVqB6H,CAAA5F,CAAA4F,oBAUrB,GARE5F,CAAA4F,oBAQF,CAPEyC,sCAAA3E,iBAAAmC,kBAAA,CACE7F,CADF,CAEEqI,sCAAA3E,iBAAAgC,0BAFF;AAGE2C,sCAAA3E,iBAAA2B,kBAAA,CAAmCxD,CAAAmD,GAAnC,CAHF,CAIEG,CAJF,CAOF,EAAAiH,CAAA,CAAkBpM,CAAA4F,oBAAlB,EAA8CT,CAEhD,EAAA1F,CAAA,CAAS,CACPnE,SAAU8Q,CADH,CAEP1C,OAAQA,CAFD,CAGP6C,OAAQA,CAHD,CAAT,CAxCA,CAJ4D,CA1QnC,CA6T3BC,8BAA+BA,QAAQ,CAAC3K,CAAD,CAAQzH,CAAR,CAAe,CAAA,IAChDqS,EAAY,EADoC,CAChCC,EAAY,EADoB,CAChBpH,EAAO,IADS,CAGhD8D,EAAWhP,CAAXgP,EAAoBhP,CAAA0K,WACxBrB,gCAAA/D,YAAA,CAAsBtF,CAAtB,CAA6B,QAAQ,CAAC4F,CAAD,CAAO,CAE1CsF,CAAAiE,mBAAA,CAAwB1H,CAAxB,CAA+B7B,CAA/B,CAAqCoJ,CAArC,CAA+C,QAAQ,CAAC3C,CAAD,CAAO,CAExD+B,sDAAAxC,KAAA,CADUnE,CAAA8K,SACV,EAD4B9K,CAC5B,CAA8B4E,CAAAnL,SAA9B,CAAJ,GACMmL,CAAAiD,OAAJ,CACEpE,CAAA6E,kBAAA,CAAuBnK,CAAvB,CAA6ByM,CAA7B,CADF,CAGEnH,CAAA6E,kBAAA,CAAuBnK,CAAvB,CAA6B0M,CAA7B,CAJJ,CAF4D,CAA9D,CAF0C,CAA5C,CAYG,IAZH,CAYS,CAAA,CAZT,CAaA,OAAO,CAACA,UAAWA,CAAZ;AAAuBD,UAAWA,CAAlC,CAjB6C,CA7T3B,CAiV3BG,gBAAiBA,QAAQ,CAACzK,CAAD,CAAU+H,CAAV,CAAsBf,CAAtB,CAAqC,CAC5D,IAAI7D,EAAO,IAAX,CACIuH,EAAexE,sCAAA3E,iBAAA0B,eAAA,CACDjD,CAAA6C,GADC,CACW7C,CAAA8C,QADX,CADnB,CAGI6H,EAAiB3K,CAAA8C,QAAA,CACnB,IADmB,CACZ4H,CAAAtB,MAAA,CAAmB,CAAnB,CAAuB,EAAvB,CADY,CACgB,KADhB,CAEnBsB,CALF,CAMIE,EAAS,IAAI3E,MAAJ,CAAW,IAAA7H,GAAAgD,YAAX,CAAiCuJ,CAAjC,CACX,IAAAvM,GAAAiD,YADW,CANb,CAQIpJ,EAAQ+H,CAAA6K,aARZ,CASIrB,EACF,IAAAsB,2BAAA,CAAgC9K,CAAhC,CAAyC/H,CAAzC,CAAgD+O,CAAhD,CACF,OAAOd,uCAAA3E,iBAAAiB,cAAA,CAA+BxC,CAA/B,CAAwC/H,CAAxC,CAA+C,QAAQ,CAAC4F,CAAD,CAAO,CACnEsF,CAAAkG,gBAAA,CAAqBxL,CAArB,CAA2BkK,CAA3B,CACK5K,oCAAAvB,aAAL,EACK0F,+BAAA1D,oBAAA,CAA8BC,CAA9B,CADL;AAEI1G,CAAA0G,CAAA1G,QAFJ,GAKEgM,CAAAoG,wBAAA,CAA6B1L,CAA7B,CAAmC2L,CAAnC,CACA,CAAArG,CAAA4H,eAAA,CAAoBlN,CAApB,CAA0B+M,CAA1B,CAAkCF,CAAlC,CAAgD1D,CAAhD,CANF,CAFmE,CAA9D,CAZqD,CAjVnC,CA0W3B8D,2BAA4BA,QAAQ,CAAC9K,CAAD,CAAU/H,CAAV,CAAiB+O,CAAjB,CAAgC,CAC9DgE,CAAAA,CAAiB/S,CAAA4P,WACjB2B,EAAAA,CAAqB,EACzB,IAAK5N,CAAAuB,mCAAAvB,aAAL,EAAqBoP,CAArB,CAIE,IAJmC,IAI1BlT,EAAI,CAJsB,CAInB8B,EAAgBoR,CAAA,CAAelT,CAAf,CAAhC,CACKA,CADL,CACSkT,CAAApT,OADT,CAEKgC,CAFL,CAEqBoR,CAAA,CAAe,EAAElT,CAAjB,CAFrB,CAGE,IAAAmT,gBAAA,CAAqBrR,CAArB,CAAoCoN,CAApC,CACA,CAAAwC,CAAA,CAAmB5P,CAAAE,cAAnB,CAAA,CACI,IAAAoR,0BAAA,CAA+BtR,CAA/B,CAGR,OAAO4P,EAf2D,CA1WzC,CA8X3B0B,0BAA2BA,QAAQ,CAACtR,CAAD,CAAgB,CACjD,MAAO,SAAQ,CAACzC,CAAD,CAAU,CACvB,MAAOA,EAAAC,QAAA,CACHwC,CAAAuR,gBADG,CAEHvR,CAAAwR,yBAFG,CADgB,CADwB,CA9XxB,CAwY3BH,gBAAiBA,QAAQ,CAACpN,CAAD,CAAOwN,CAAP,CAAgB,CACvCxN,CAAAsN,gBAAA,CAAuB,IAAIlF,MAAJ,CAAWpI,CAAA/D,cAAX;AAA+B,GAA/B,CACvB+D,EAAAuN,yBAAA,CAAgCvN,CAAA/D,cAAhC,CAAqD,GAArD,CAA2DuR,CAC3DxN,EAAA4F,oBAAA,CAA2B5F,CAAA4F,oBAA3B,EAAuD5F,CAAA1E,SACvD0E,EAAA1E,SAAA,CAAgB0E,CAAA4F,oBAAArM,QAAA,CACZyG,CAAA/D,cADY,CACQ+D,CAAAuN,yBADR,CAJuB,CAxYd,CAwZ3BL,eAAgBA,QAAQ,CAAClN,CAAD,CAAO+M,CAAP,CAAeF,CAAf,CAA6BW,CAA7B,CAAsC,CAC5DxN,CAAA4F,oBAAA,CAA2B5F,CAAA4F,oBAA3B,EAAuD5F,CAAA1E,SAEnDuG,EAAAA,CAAQ,GAARA,CAAc2L,CAElB,KADA,IAAIrC,EAFWnL,CAAA4F,oBAEH1J,MAAA,CAAe,GAAf,CAAZ,CACSjC,EAAE,CADX,CACcC,EAAEiR,CAAApR,OADhB,CAC8BM,CAA9B,CAAkCJ,CAAlC,CAAoCC,CAApC,GAA2CG,CAA3C,CAA6C8Q,CAAA,CAAMlR,CAAN,CAA7C,EAAwDA,CAAA,EAAxD,CACEkR,CAAA,CAAMlR,CAAN,CAAA,CAAWI,CAAAyB,MAAA,CAAQiR,CAAR,CAAA,CACT1S,CAAAd,QAAA,CAAUsT,CAAV,CAAwBhL,CAAxB,CADS,CAETA,CAFS,CAED,GAFC,CAEKxH,CAElB2F,EAAA1E,SAAA,CAAgB6P,CAAAlF,KAAA,CAAW,GAAX,CAV4C,CAxZnC,CAqa3BwH,0BAA2BA,QAAQ,CAACtL,CAAD,CAAU7G,CAAV,CAAoBoS,CAApB,CAAyB,CAC1D,IAAIjJ,EAAItC,CAAAC,aAAA,CAAqB,OAArB,CAAJqC;AAAqC,EACrCkJ,EAAAA,CAAID,CAAA,CAAMjJ,CAAAlL,QAAA,CAAUmU,CAAV,CAAepS,CAAf,CAAN,EACLmJ,CAAA,CAAIA,CAAJ,CAAQ,GAAR,CAAc,EADT,EACe,IAAAmJ,YADf,CACkC,GADlC,CACwCtS,CAC5CmJ,EAAJ,GAAUkJ,CAAV,EACExL,CAAAX,aAAA,CAAqB,OAArB,CAA8BmM,CAA9B,CALwD,CArajC,CA8a3BE,kBAAmBA,QAAQ,CAAC1L,CAAD,CAAU+H,CAAV,CAAsB5O,CAAtB,CAAgCsD,CAAhC,CAAuC,CAE5DtF,CAAAA,CAAUsF,CAAA,CAAQA,CAAAG,YAAR,EAA6B,EAA7B,CACZ,IAAA6N,gBAAA,CAAqBzK,CAArB,CAA8B+H,CAA9B,CAA0C5O,CAA1C,CAEF,KAAIF,EAAI+G,CAAA2L,cACJ1S,EAAJ,EAAU2C,CAAAuB,mCAAAvB,aAAV,EAA2B3C,CAA3B,GAAiCwD,CAAjC,GACExD,CAAA2S,UAAA,EACA,CAAmB,CAAnB,EAAI3S,CAAA2S,UAAJ,EAAwB3S,CAAA4S,WAAxB,EACE5S,CAAA4S,WAAA3O,YAAA,CAAyBjE,CAAzB,CAHJ,CAQIkE,oCAAAvB,aAAJ,CAEMoE,CAAA2L,cAAJ,EACE3L,CAAA2L,cAAA/O,YACA,CADoCzF,CACpC,CAAAsF,CAAA,CAAQuD,CAAA2L,cAFV,EAIWxU,CAJX,GAOEsF,CAPF,CAOU6E,+BAAA9C,SAAA,CAAmBrH,CAAnB,CAA4BgC,CAA5B;AAAsC6G,CAAA8L,WAAtC,CACN9L,CAAA+L,cADM,CAPV,CAFF,CAcOtP,CAAL,CAQYA,CAAAoP,WARZ,EASEvK,+BAAAzC,WAAA,CAAqBpC,CAArB,CAA4B,IAA5B,CAAkCuD,CAAA+L,cAAlC,CATF,CAGM5U,CAHN,GAIIsF,CAJJ,CAIY6E,+BAAA9C,SAAA,CAAmBrH,CAAnB,CAA4BgC,CAA5B,CAAsC,IAAtC,CACN6G,CAAA+L,cADM,CAJZ,CAcEtP,EAAJ,GACEA,CAAAmP,UAKA,CALkBnP,CAAAmP,UAKlB,EALqC,CAKrC,CAHI5L,CAAA2L,cAGJ,EAH6BlP,CAG7B,EAFEA,CAAAmP,UAAA,EAEF,CAAA5L,CAAA2L,cAAA,CAAwBlP,CAN1B,CASIiK,6CAAJ,GACEjK,CAAAG,YADF,CACsBH,CAAAG,YADtB,CAGA,OAAOH,EAtDyD,CA9avC,CAue3BuP,iBAAkBA,QAAQ,CAACvP,CAAD,CAAQsL,CAAR,CAAoB,CAC5C,IAAI9P,EAAQqJ,+BAAA7D,cAAA,CAAwBhB,CAAxB,CAAZ,CACI0G,EAAO,IACX1G,EAAAG,YAAA,CAAoB0E,+BAAAjE,UAAA,CAAoBpF,CAApB;AAA2B,QAAQ,CAAC4F,CAAD,CAAO,CAC5D,IAAI+E,EAAM/E,CAAA1G,QAANyL,CAAqB/E,CAAAlF,cACrBkF,EAAA8J,aAAJ,EAAyB9J,CAAA8J,aAAAxQ,QAAzB,GASEyL,CAEA,CAFMjH,8BAAAX,2BAAA,CAA2B4H,CAA3B,CAEN,CAAA/E,CAAA1G,QAAA,CAAegM,CAAA0F,mBAAA,CAAwBjG,CAAxB,CAA6BmF,CAA7B,CAXjB,CAF4D,CAA1C,CAHwB,CAvenB,CA4f3B3J,GAAIkD,+BAAAlD,GA5fuB,CA6f3BqN,YAAa,SA7fc,CAigB7BQ,SAAS/B,oDAAY,CAACrS,CAAD,CAAIqU,CAAJ,CAAU,CAC7B,IAAIlC,EAAImC,QAAA,CAAStU,CAAT,CAAa,EAAb,CAERqU,EAAA,CAAKlC,CAAL,CAAA,EAAWkC,CAAA,CAAKlC,CAAL,CAAX,EAAsB,CAAtB,EADQ,CACR,EADcnS,CACd,CADkB,EAFW,CAjgBpBuU,qCAAAzF,gBAAA,CAAAA,sD,CCZV,IAAA,kCAAA,EAAA,CAAU0F,+CAAc,EAAdC,kCAAAD,YAAA,CAAAA,8C,CCDV,IAAA,uCAAA,EAAA,CAGUE,uDAAiB,EAH3B,CAKGC,2CAAKhR,MAAAiR,eACT;GAAID,0CAAJ,EAAW5Q,CAAAuB,mCAAAvB,aAAX,CAAyB,CACvB,IAAM8Q,WAAaF,0CAAAG,OACnBH,2CAAAG,OAAA,CAAYC,QAAQ,EAAG,CACrB,IAAIpE,EAAOqE,SAAA,CAAU,CAAV,CACXN,uDAAA,CAAe/D,CAAf,CAAA,CAAuBlH,+BAAA/B,sBAAA,CAAsBiJ,CAAtB,CACvB,OAAOkE,WAAAI,MAAA,CAAiB,IAAjB,CAAuBD,SAAvB,CAHc,CAFA,CAHdE,sCAAAR,eAAA,CAAAA,sD,CC0DV,IAAA,gCAAA,EAAA,CAGGxL,6CAAcO,+BAAAlD,GAAA2C,YAHjB,CAIGD,4CAAaQ,+BAAAlD,GAAA0C,WAJhB,CAMGkM,kDAAmB,OANtB,CAOGC,iDAAkB,6BAPrB,CAWGC,+CAAgB,KAXnB,CAeKC,0CACJC,QAAW,EAAG,CACZ,IAAAC,KAAA,CAAY,EADA,CAGd;yCAAA,UAAA,IAAA,CAAAC,QAAG,CAAC9E,CAAD,CAAO3B,CAAP,CAAc,CACf2B,CAAA,CAAOA,CAAA5P,KAAA,EACP,KAAAyU,KAAA,CAAU7E,CAAV,CAAA,CAAkB,CAChBT,WAAYlB,CADI,CAEhB0G,WAAY,EAFI,CAFH,CAOjB,0CAAA,UAAA,IAAA,CAAAC,QAAG,CAAChF,CAAD,CAAO,CACRA,CAAA,CAAOA,CAAA5P,KAAA,EACP,OAAO,KAAAyU,KAAA,CAAU7E,CAAV,CAFC,CAMZ;IAAMiF,2CACJL,QAAW,EAAG,CAAA,IAAA,EAAA,IAEZ,KAAAM,gBAAA,CADA,IAAAC,iBACA,CADwB,IAExB,KAAAN,KAAA,CAAY,IAAIF,yCAChB,KAAAS,WAAA,CAAkBV,8CAClB,KAAAW,2BAAA,CAAkCC,QAAA,CAChCC,CADgC,CACrBC,CADqB,CACPC,CADO,CACQC,CADR,CAE9B,CAAA,MAAA,EAAAC,sBAAA,CACEJ,CADF,CACaC,CADb,CAC2BC,CAD3B,CAC0CC,CAD1C,CAAA,CAPQ,CAUd,2CAAA,UAAA,eAAA,CAAAE,QAAc,CAAC3R,CAAD,CAAQ4R,CAAR,CAAqB,CACjC,IAAAC,eAAA,CAAoBhN,+BAAA7D,cAAA,CAAchB,CAAd,CAApB,CAA0C4R,CAA1C,CADiC,CAGnC;0CAAA,UAAA,eAAA,CAAAE,QAAc,CAACtW,CAAD,CAAQoW,CAAR,CAAqB,CAAA,IAAA,EAAA,IACjC,KAAAV,iBAAA,CAAwBrB,iCAAAD,YAAA,CAAYgC,CAAZ,CACxB/M,gCAAA/D,YAAA,CAAYtF,CAAZ,CAAmB,QAAA,CAACoC,CAAD,CAAO,CAAE,CAAAmU,cAAA,CAAmBnU,CAAnB,CAAF,CAA1B,CACI,KAAAsT,iBAAJ,GACE,IAAAA,iBAAAc,mBADF,CAC6C,CAAA,CAD7C,CAGA,KAAAd,iBAAA,CAAwB,IANS,CAQnC;0CAAA,UAAA,cAAA,CAAAa,QAAa,CAAC3Q,CAAD,CAAO,CAClBA,CAAA1G,QAAA,CAAe,IAAAuX,iBAAA,CAAsB7Q,CAAAlF,cAAtB,CAIO,QAAtB,GAAIkF,CAAA1E,SAAJ,GACE0E,CAAA1E,SADF,CACkB,WADlB,CALkB,CASpB,2CAAA,UAAA,iBAAA,CAAAuV,QAAgB,CAACvX,CAAD,CAAU,CAExBA,CAAA,CAAUA,CAAAC,QAAA,CAAgB0J,2CAAhB,CAA4B,IAAA+M,2BAA5B,CAEV,OAAO,KAAAc,sBAAA,CAA2BxX,CAA3B,CAJiB,CAM1B;0CAAA,UAAA,4BAAA,CAAAyX,QAA2B,CAAChG,CAAD,CAAW,CAC/B,IAAA8E,gBAAL,GACE,IAAAA,gBAEA,CAFuBhR,QAAAC,cAAA,CAAuB,MAAvB,CAEvB,CADA,IAAA+Q,gBAAAjR,MAAAoS,IACA,CADiC,SACjC,CAAAnS,QAAAG,KAAAC,YAAA,CAA0B,IAAA4Q,gBAA1B,CAHF,CAKA,OAAOlS,OAAAsT,iBAAA,CAAwB,IAAApB,gBAAxB,CAAAqB,iBAAA,CAA+DnG,CAA/D,CAN6B,CAStC;0CAAA,UAAA,sBAAA,CAAA+F,QAAqB,CAAC7X,CAAD,CAAO,CAG1B,IAFA,IAAIsN,CAEJ,CAAOA,CAAP,CAAWrD,4CAAAsH,KAAA,CAAiBvR,CAAjB,CAAX,CAAA,CAAoC,CAClC,IAAIiX,EAAY3J,CAAA,CAAE,CAAF,CAAhB,CACI4K,EAAY5K,CAAA,CAAE,CAAF,CACZ6K,EAAAA,CAAM7K,CAAA+C,MAGV,KAAI+H,EAAWD,CAAXC,CAAiBnB,CAAA1U,QAAA,CAAkB,QAAlB,CAArB,CACI8V,EAAgBF,CAAhBE,CAAsBpB,CAAAnW,OAD1B,CAGIwX,EAAkBtY,CAAAsS,MAAA,CAAW,CAAX,CAAc8F,CAAd,CAClBG,EAAAA,CAAiBvY,CAAAsS,MAAA,CAAW+F,CAAX,CACjBG,EAAAA,CAAW,IAAAC,cAAA,CAAmBH,CAAnB,CACXI,EAAAA,CAAc,IAAAC,wBAAA,CAA6BT,CAA7B,CAAwCM,CAAxC,CAElBxY,EAAA,CAAO,CAACsY,CAAD,CAAkBI,CAAlB,CAA+BH,CAA/B,CAAAvL,KAAA,CAAoD,EAApD,CAEP/C,6CAAAkI,UAAA,CAAwBgG,CAAxB,CAA8BO,CAAA5X,OAhBI,CAkBpC,MAAOd,EArBmB,CA2B5B;0CAAA,UAAA,wBAAA,CAAA2Y,QAAuB,CAACT,CAAD,CAAYU,CAAZ,CAAuB,CAC5CV,CAAA,CAAYA,CAAA5X,QAAA,CAAkB4V,iDAAlB,CAAoC,EAApC,CACZ,KAAI2C,EAAO,EAAX,CACIC,EAAa,IAAAvC,KAAAG,IAAA,CAAcwB,CAAd,CAGZY,EAAL,GACE,IAAAvC,KAAAC,IAAA,CAAc0B,CAAd,CAAyB,EAAzB,CACA,CAAAY,CAAA,CAAa,IAAAvC,KAAAG,IAAA,CAAcwB,CAAd,CAFf,CAIA,IAAIY,CAAJ,CAAgB,CACV,IAAAjC,iBAAJ,GACEiC,CAAArC,WAAA,CAAsB,IAAAI,iBAAAnF,KAAtB,CADF,CACsD,IAAAmF,iBADtD,CADc,KAIVzV,CAJU,CAIA2X,CACd,KAAK3X,CAAL,GAAU0X,EAAA7H,WAAV,CACE8H,CAMA,CANIH,CAMJ,EANiBA,CAAA,CAAUxX,CAAV,CAMjB,CALA8Q,CAKA,CALQ,CAAC9Q,CAAD,CAAI,QAAJ,CAAc8W,CAAd,CAAyB9B,8CAAzB,CAAwChV,CAAxC,CAKR,CAJI2X,CAIJ,EAHE7G,CAAA3Q,KAAA,CAAW,GAAX,CAAgBwX,CAAhB,CAGF,CADA7G,CAAA3Q,KAAA,CAAW,GAAX,CACA,CAAAsX,CAAAtX,KAAA,CAAU2Q,CAAAlF,KAAA,CAAW,EAAX,CAAV,CAZY,CAehB,MAAO6L,EAAA7L,KAAA,CAAU,IAAV,CAzBqC,CA4B9C;0CAAA,UAAA,yBAAA,CAAAgM,QAAwB,CAAClH,CAAD,CAAWhI,CAAX,CAAkB,CACxC,IAAIjH,EAAQsT,gDAAA5E,KAAA,CAAqBzH,CAArB,CACRjH,EAAJ,GAIIiH,CAJJ,CACMjH,CAAA,CAAM,CAAN,CAAJ,CAGU8T,0CAAAmB,4BAAA,CAAsChG,CAAtC,CAHV,CAUU,oBAXZ,CAcA,OAAOhI,EAhBiC,CAqB1C;0CAAA,UAAA,cAAA,CAAA2O,QAAa,CAACzY,CAAD,CAAO,CACd+P,CAAAA,CAAQ/P,CAAAiD,MAAA,CAAW,GAAX,CAGZ,KAJkB,IAEd6O,CAFc,CAEJhI,CAFI,CAGdmP,EAAM,EAHQ,CAITjY,EAAI,CAAb,CAAuBA,CAAvB,CAA2B+O,CAAAjP,OAA3B,CAAyCE,CAAA,EAAzC,CAEE,GADAI,CACA,CADI2O,CAAA,CAAM/O,CAAN,CACJ,CACEkY,CAEA,CAFK9X,CAAA6B,MAAA,CAAQ,GAAR,CAEL,CAAgB,CAAhB,CAAIiW,CAAApY,OAAJ,GACEgR,CAGA,CAHWoH,CAAA,CAAG,CAAH,CAAApX,KAAA,EAGX,CADAgI,CACA,CADQ,IAAAkP,yBAAA,CAA8BlH,CAA9B,CAAwCoH,CAAA5G,MAAA,CAAS,CAAT,CAAAtF,KAAA,CAAiB,GAAjB,CAAxC,CACR,CAAAiM,CAAA,CAAInH,CAAJ,CAAA,CAAgBhI,CAJlB,CAQJ,OAAOmP,EAjBW,CAoBpB,2CAAA,UAAA,sBAAA,CAAAE,QAAqB,CAACL,CAAD,CAAa,CAChC,IAAKvB,IAAIA,CAAT,GAAwBuB,EAAArC,WAAxB,CACMc,CAAJ,GAAoB,IAAAV,iBAApB,GACEiC,CAAArC,WAAA,CAAsBc,CAAtB,CAAAI,mBADF,CAC0D,CAAA,CAD1D,CAF8B,CAQlC;0CAAA,UAAA,sBAAA,CAAAN,QAAqB,CAACJ,CAAD,CAAYC,CAAZ,CAA0BC,CAA1B,CAAyCC,CAAzC,CAAqD,CAAA,IAAA,EAAA,IAEpED,EAAJ,EAEE3M,+BAAAhB,2BAAA,CAA2B2N,CAA3B,CAA0C,QAAA,CAACxN,CAAD,CAASG,CAAT,CAAmB,CACvDA,CAAJ,EAAa,CAAAyM,KAAAG,IAAA,CAAc5M,CAAd,CAAb,GACEsN,CADF,CACe,SADf,CAC2BtN,CAD3B,CACmC,GADnC,CAD2D,CAA7D,CAMF,IAAKsN,CAAAA,CAAL,CACE,MAAOH,EAET,KAAImC,EAAoB,IAAAvB,sBAAA,CAA2BT,CAA3B,CAAxB,CACIzN,EAASsN,CAAA3E,MAAA,CAAgB,CAAhB,CAAmB2E,CAAA1U,QAAA,CAAkB,IAAlB,CAAnB,CADb,CAGI8W,EADAC,CACAD,CADc,IAAAZ,cAAA,CAAmBW,CAAnB,CAFlB,CAIIN,EAAa,IAAAvC,KAAAG,IAAA,CAAcQ,CAAd,CAJjB,CAKIqC,EAAWT,CAAXS,EAAyBT,CAAA7H,WACzBsI,EAAJ,CAGEF,CAHF,CAGkBhI,MAAAC,OAAA,CAAcD,MAAAmI,OAAA,CAAcD,CAAd,CAAd,CAAuCD,CAAvC,CAHlB,CAKE,IAAA/C,KAAAC,IAAA,CAAcU,CAAd,CAA4BmC,CAA5B,CAEF,KAAIJ,EAAM,EAAV,CACI7X,CADJ,CACOsT,CADP,CAGI+E,EAAmB,CAAA,CACvB,KAAKrY,CAAL,GAAUiY,EAAV,CACE3E,CAQA,CARI4E,CAAA,CAAYlY,CAAZ,CAQJ,CANUsY,IAAAA,EAMV,GANIhF,CAMJ,GALEA,CAKF,CALM,SAKN,EAHI6E,CAAAA,CAGJ,EAHkBnY,CAGlB,GAHuBmY,EAGvB,GAFEE,CAEF,CAFqB,CAAA,CAErB;AAAAR,CAAA1X,KAAA,CAAS2V,CAAT,CAAwBd,8CAAxB,CAAwChV,CAAxC,CAA4C,IAA5C,CAAmDsT,CAAnD,CAEE+E,EAAJ,EACE,IAAAN,sBAAA,CAA2BL,CAA3B,CAEEA,EAAJ,GACEA,CAAA7H,WADF,CAC0BoI,CAD1B,CAaIlC,EAAJ,GACExN,CADF,CACWsN,CADX,CACuB,GADvB,CAC6BtN,CAD7B,CAGA,OAAOA,EAAP,CAAgBsP,CAAAjM,KAAA,CAAS,IAAT,CAAhB,CAAiC,GA5DuC,CAgE5E,KAAI2M,2CAAY,IAAIhD,0CAApB,CAEAiD,sDADAlV,MAAA,UACAkV,CADsBD,0CACPE,gCAAAC,QAAA,CAAAF,qD,CCrTd,IAAA,kCAAA,EAWD,QAAA,WAAA,EAAA;IAAIG,6CAAYC,MAAA,CAAO,WAAP,CAAhB,CAEWC,4CAAW,CACpBC,aAAc,EADM,CAEpBpV,aAAcuB,mCAAAvB,aAFM,CAGpBqV,UAAW9T,mCAAAjB,mBAHS,CAIpBa,eAAgBI,mCAAAJ,eAJI,CAKpBmU,eAAgBxU,QAAAyU,gBALI,CAMpBC,uBAAAA,QAAsB,CAAC5I,CAAD,CAAO,CAC3B,IAAI6I,EAAK,IAAAL,aAAA,CAAkBxI,CAAlB,CAAL6I,EAAgC,IAAAL,aAAA,CAAkBxI,CAAlB,CAAhC6I,EAA2D,CAA3DA,EAAgE,CACpE,OAAO7I,EAAP,CAAc,GAAd,CAAoB6I,CAFO,CANT,CAUpBC,cAAAA,QAAa,CAACC,CAAD,CAAW,CAClBC,CAAAA,CAASD,CAAAvP,QAAAyP,iBAAA,CAAkC,OAAlC,CAEb;IADA,IAAIta,EAAU,EAAd,CACSW,EAAI,CAAb,CAAgBA,CAAhB,CAAoB0Z,CAAA5Z,OAApB,CAAmCE,CAAA,EAAnC,CAAwC,CACtC,IAAImB,EAAIuY,CAAA,CAAO1Z,CAAP,CACRX,EAAAkB,KAAA,CAAaY,CAAA2D,YAAb,CACA3D,EAAA4S,WAAA3O,YAAA,CAAyBjE,CAAzB,CAHsC,CAKxC,MAAO9B,EAAA2M,KAAA,CAAa,EAAb,CARe,CAVJ,CAoBpB4N,gBAAAA,QAAe,CAACjM,CAAD,CAAO8L,CAAP,CAAiB,CAC9B,GAAII,CAAAJ,CAAAI,UAAJ,CAAA,CAGAJ,CAAAI,UAAA,CAAqB,CAAA,CACrBJ,EAAA/I,KAAA,CAAgB/C,CAAA5C,GAChByJ,kCAAAD,YAAA,CAAY5G,CAAA5C,GAAZ,CAAA,CAAuB0O,CACvB,KAAIpa,EAAU,IAAAma,cAAA,CAAmBC,CAAnB,CAAA3Y,KAAA,EACT,KAAAgD,aAAL,EACEsK,sCAAA3E,iBAAAC,IAAA,CAAqB+P,CAAAvP,QAArB,CAAuCyD,CAAA5C,GAAvC,CAGF,EADI+O,CACJ,CADUza,CACV,EADqBwE,8BAAA9E,MAAA,CAAMM,CAAN,CACrB,GAAW,IAAA8Z,UAAX,EAA8BlU,CAAA,IAAAA,eAA9B,EACE4T,+BAAAC,QAAArC,eAAA,CAAyBqD,CAAzB;AAA8BnM,CAAA5C,GAA9B,CAEF,KAAIgP,EAAmB,EACnBD,EAAJ,GACEL,CAAAO,UAKA,CALqBF,CAKrB,CAJK,IAAAX,UAIL,GAHEY,CAGF,CAHqBzF,qCAAAzF,gBAAAC,eAAA,CACjB2K,CAAAO,UADiB,CACGrM,CADH,CAGrB,EAAKoM,CAAAja,OAAL,EAAgCqZ,CAAA,IAAAA,UAAhC,EAGE,IAAAc,qBAAA,CAA0BtM,CAA1B,CAAgC8L,CAAAO,UAAhC,CAFW,IAAAlW,aAAAnE,CAAoB8Z,CAAAvP,QAApBvK,CAAuC,IAElD,CADkBsV,sCAAAR,eAAAyF,CAAevM,CAAA5C,GAAfmP,CAClB,CATJ,CAYAT,EAAAU,kBAAA,CAA6BJ,CA3B7B,CAD8B,CApBZ,CAkDpBE,qBAAAA,QAAoB,CAACtM,CAAD,CAAOxN,CAAP,CAAcia,CAAd,CAA0BF,CAA1B,CAAuC,CACrD7a,CAAAA,CAAU+O,sCAAA3E,iBAAAiB,cAAA,CAA+BiD,CAA/B,CAAqCxN,CAArC,CACdqJ,gCAAA9C,SAAA,CAAmBrH,CAAnB,CAA4BsO,CAAA5C,GAA5B,CAAqCqP,CAArC,CAAiDF,CAAjD,CAFyD,CAlDvC,CAsDpBG,aAAAA,QAAY,CAAC1M,CAAD,CAAO,CACjB,IAAI8L;AAAWjF,iCAAAD,YAAA,CAAY5G,CAAA5C,GAAZ,CACX0O,EAAJ,GACE9L,CAAAoF,aADF,CACsB0G,CAAAO,UADtB,CAGArM,EAAA,CAAKoL,4CAAL,CAAA,CAAkB,CAAA,CAClBpL,EAAAsG,cAAA,CAAqBgB,sCAAAR,eAAA,CAAe9G,CAAA5C,GAAf,CACrB4C,EAAA2M,0BAAA,CAAiC,EAC5B,KAAAnB,UAAL,GACExL,CAAA4M,kBAGA,CAHyB,IAGzB,CAFA5M,CAAA6M,qBAEA,CAF4B,IAE5B,CADA7M,CAAA8M,gBACA,CADuB,IACvB,CAAIhB,CAAJ,GACE9L,CAAA+M,wBADF,CACiCjB,CAAAU,kBADjC,CAJF,CARiB,CAtDC,CAuEpBpT,WAAAA,QAAU,CAAC4G,CAAD,CAAOgN,CAAP,CAAsB,CACzBhN,CAAA,CAAKoL,4CAAL,CAAL,EACE,IAAAsB,aAAA,CAAkB1M,CAAlB,CAEF,KAAAiN,uBAAA,EACAvK;MAAAC,OAAA,CAAc3C,CAAA2M,0BAAd,CAA8CK,CAA9C,CACI,KAAAxB,UAAJ,EAaE,CAZIM,CAYJ,CAZejF,iCAAAD,YAAA,CAAY5G,CAAA5C,GAAZ,CAYf,GAXgB0O,CAAAO,UAWhB,EAXsCP,CAAA9C,mBAWtC,GATEkC,+BAAAC,QAAArC,eAAA,CAAyBgD,CAAAO,UAAzB,CAA6CrM,CAAA5C,GAA7C,CAOA,CALA,IAAAkP,qBAAA,CAA0BtM,CAA1B,CAAgC8L,CAAAO,UAAhC,CADa,IAAAlW,aAAA8C,CAAoB6S,CAAAvP,QAApBtD,CAAuC,IACpD,CAKA,CAHI,IAAA9C,aAGJ,EAFE,IAAAmW,qBAAA,CAA0BtM,CAA1B,CAAgC8L,CAAAO,UAAhC,CAAoD,IAAAhG,WAApD,CAEF,CAAArG,CAAAoF,aAAA,CAAoB0G,CAAAO,UAEtB,EAAA,IAAAa,wBAAA,CAA6BlN,CAA7B,CAAmCA,CAAA2M,0BAAnC,CAbF,GAeE,IAAAQ,kBAAA,CAAuBnN,CAAvB,CAA6BA,CAAA2M,0BAA7B,CAOA;AANI3M,CAAA+M,wBAMJ,EANoC/M,CAAA+M,wBAAA5a,OAMpC,EAJE,IAAAib,sBAAA,CAA2BpN,CAA3B,CAIF,EAFIhO,CAEJ,CAFW,IAAAqb,aAAA,CAAkBrN,CAAlB,CAAA,CAA0BA,CAA1B,CAAiCA,CAAAqG,WAE5C,GACE,IAAAiH,oBAAA,CAAyBtb,CAAzB,CAvBJ,CAN8B,CAvEZ,CA0GpBub,kBAAAA,QAAiB,EAAG,CAClB,IAAA9B,eAAA+B,QAAA,CAA8B,CAAA,CADZ,CA1GA,CAgHpBC,gBAAAA,QAAe,EAAG,CAChB,MAAO,CAAC,IAAAhC,eAAA+B,QADQ,CAhHE,CAqHpBP,uBAAAA,QAAsB,EAAG,CACvB,IAAIS,EAAQ,IAAAjC,eACZ,IAAK+B,CAAAE,CAAAF,QAAL,CAAoB,CACbE,CAAAf,0BAAL,GACEe,CAAAf,0BADF,CACoC,EADpC,CAGA,IAAKnB,CAAA,IAAAA,UAAL,CAAqB,CACnB,IAAA2B,kBAAA,CAAuBO,CAAvB,CACA,KAAIC,EAAKD,CAAAE,iBACT,IAAID,CAAJ,CACE,IAAK,IAAItb;AAAE,CAAX,CAAcA,CAAd,CAAkBsb,CAAAxb,OAAlB,CAA6BE,CAAA,EAA7B,CAAkC,CAChC,IAAI2E,EAAQ2W,CAAA,CAAGtb,CAAH,CACZ2E,EAAA6W,gBAAA,CAAsB,MAAtB,CACAlH,sCAAAzF,gBAAAqF,iBAAA,CAAiCvP,CAAjC,CACE0W,CAAAd,kBADF,CAHgC,CAJjB,CAYrBc,CAAAF,QAAA,CAAgB,CAAA,CAhBE,CAFG,CArHL,CA0IpBF,oBAAAA,QAAmB,CAACtb,CAAD,CAAO,CACpBoK,CAAAA,CAAKpK,CAAAyK,SACT,KAFwB,IAEfpK,EAAI,CAFW,CAERwK,CAAhB,CAAmBxK,CAAnB,CAAuB+J,CAAAjK,OAAvB,CAAkCE,CAAA,EAAlC,CACEwK,CAIA,CAJIT,CAAA,CAAG/J,CAAH,CAIJ,CAHIwK,CAAAwJ,WAGJ,EAFE,IAAAjN,WAAA,CAAgByD,CAAhB,CAEF,CAAA,IAAAyQ,oBAAA,CAAyBzQ,CAAzB,CAPsB,CA1IN,CAoJpBiR,mBAAAA,QAAkB,CAAC/a,CAAD,CAAO,CAGvB,MAAA,CADIiN,CACJ,CAFWjN,CAAAgb,YAAA/b,EACAgO,KACX,EACMA,CAAA,CAAKoL,4CAAL,CAAJ,CACSpL,CADT,CAGS,IAAA8N,mBAAA,CAAwB9N,CAAxB,CAJX,CAOO,IAAAyL,eAVgB,CApJL,CAgKpB4B,aAAAA,QAAY,CAACta,CAAD,CAAO,CACjB,MAAQA,EAAR;AAAiB,IAAA0Y,eADA,CAhKC,CAmKpB2B,sBAAAA,QAAqB,CAACpN,CAAD,CAAO,CAC1B,IAAIgO,EAAmBhO,CAAA8M,gBACvB9M,EAAA8M,gBAAA,CAAuB,IAAAnB,uBAAA,CAA4B3L,CAAA5C,GAA5B,CACvB,KAAIpG,EAAQ2P,qCAAAzF,gBAAA+E,kBAAA,CAAkCjG,CAAlC,CAAwCA,CAAA4M,kBAAxC,CAAgE5M,CAAA8M,gBAAhE,CAAsF,IAAtF,CACP,KAAA3W,aAAL,EACEwQ,qCAAAzF,gBAAA2E,0BAAA,CAA0C7F,CAA1C,CAAgDA,CAAA8M,gBAAhD,CAAsEkB,CAAtE,CAEF,OAAOhX,EAPmB,CAnKR,CA4KpBmW,kBAAAA,QAAiB,CAACnN,CAAD,CAAO,CACtB,IAAI0N,EAAQ,IAAAI,mBAAA,CAAwB9N,CAAxB,CAAZ,CAEIoB,EAAQsB,MAAAmI,OAAA,CADU6C,CAAAd,kBACV,EAAiC,IAAjC,CAFZ,CAGIqB,EAAmBtH,qCAAAzF,gBAAA0D,8BAAA,CAA8C5E,CAA9C;AAAoDA,CAAAoF,aAApD,CAHvB,CAII8I,EAAyBvH,qCAAAzF,gBAAAoD,uBAAA,CAAuCoJ,CAAAtI,aAAvC,CAA2DpF,CAA3D,CAAAsC,WAC7BI,OAAAC,OAAA,CACEvB,CADF,CAEE6M,CAAApJ,UAFF,CAGEqJ,CAHF,CAIED,CAAAnJ,UAJF,CAMA,KAAAqJ,qBAAA,CAA0B/M,CAA1B,CAAiCpB,CAAA2M,0BAAjC,CACAhG,sCAAAzF,gBAAA8B,MAAA,CAAsB5B,CAAtB,CACApB,EAAA4M,kBAAA,CAAyBxL,CACrBgN,EAAAA,CAAW,EACf,IAAIpO,CAAA+M,wBAAJ,CACE,IAAS1a,IAAAA,EAAI,CAAJA,CAAOD,CAAhB,CAAmBC,CAAnB,CAAuB2N,CAAA+M,wBAAA5a,OAAvB,CAA4DE,CAAA,EAA5D,CACED,CACA,CADI4N,CAAA+M,wBAAA,CAA6B1a,CAA7B,CACJ,CAAA+b,CAAA,CAAShc,CAAT,CAAA,CAAcgP,CAAA,CAAMhP,CAAN,CAGlB4N,EAAA6M,qBAAA,CAA4BuB,CAtBN,CA5KJ,CAoMpBD,qBAAAA,QAAoB,CAAC/M,CAAD,CAAQiN,CAAR,CAAmB,CACrC,IAAK5b,IAAIA,CAAT,GAAc4b,EAAd,CAAyB,CACvB,IAAItI;AAAIsI,CAAA,CAAU5b,CAAV,CAGR,IAAIsT,CAAJ,EAAe,CAAf,GAASA,CAAT,CACE3E,CAAA,CAAM3O,CAAN,CAAA,CAAWsT,CALU,CADY,CApMnB,CA8MpBmH,wBAAAA,QAAuB,CAAC3S,CAAD,CAAU+H,CAAV,CAAsB,CAE3C,IAAK7P,IAAIA,CAAT,GAAc6P,EAAd,CAEY,IAAV,GAAI7P,CAAJ,CACE8H,CAAAvD,MAAAsX,eAAA,CAA6B7b,CAA7B,CADF,CAGE8H,CAAAvD,MAAAuX,YAAA,CAA0B9b,CAA1B,CAA6B6P,CAAA,CAAW7P,CAAX,CAA7B,CAPuC,CA9MzB,CA0NpB+b,qBAAAA,QAAoB,CAACxX,CAAD,CAAQ,CAC1B,IAAIyX,EAAY,CAACzX,CAAAiB,WAAjB,CACIzF,EAAQqJ,+BAAA7D,cAAA,CAAwBhB,CAAxB,CACRyX,EAAJ,GACMzc,CAKJ,CALW,IAAAyZ,eAKX,CAJAzZ,CAAA4b,iBAIA,CAJwB5b,CAAA4b,iBAIxB,EAJiD,EAIjD,CAHA5b,CAAA4b,iBAAAhb,KAAA,CAA2BoE,CAA3B,CAGA,CADAhF,CAAAoT,aACA,CADoBpT,CAAAoT,aACpB,EADyC,CAAC5S,MAAO,EAAR,CACzC,CAAAR,CAAAoT,aAAA5S,MAAAI,KAAA,CAA6BJ,CAA7B,CANF,CAQA,KAAIkL,EAAO,IACX7B,gCAAA/D,YAAA,CAAsBtF,CAAtB,CACE,QAAQ,CAAC4F,CAAD,CAAO,CAERsF,CAAAvH,aAAL,CAGEsK,sCAAA3E,iBAAAsE,sBAAA,CAAuChI,CAAvC,CAHF;AACEqI,sCAAA3E,iBAAAqE,aAAA,CAA8B/H,CAA9B,CAKEsF,EAAA8N,UAAJ,EAAuBlU,CAAAoG,CAAApG,eAAvB,EACE4T,+BAAAC,QAAApC,cAAA,CAAwB3Q,CAAxB,CATW,CADjB,CAgBI,KAAAoT,UAAJ,GAGExU,CAAA6W,gBAAA,CAAsB,MAAtB,CACA,CAAA7W,CAAAG,YAAA,CAAoB0E,+BAAAjE,UAAA,CAAoBpF,CAApB,CAJtB,CA5B0B,CA1NR,CA6PpBkc,aAAAA,QAAY,CAACpM,CAAD,CAAa,CACvB,IAAAiL,kBAAA,EACA,KAAAnU,WAAA,CAAgB,IAAAqS,eAAhB,CAAqCnJ,CAArC,CAFuB,CA7PL,CAmQtBvM,OAAA,SAAA,CAAqBuV,2CAnQVqD,kCAAArD,SAAA,CAAAA","file":"ShadyCSS.min.js","sourcesContent":[null,null,null,null,null,null,null,"/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\n * Extremely simple css parser. Intended to be not more than what we need\n * and definitely not necessarily correct =).\n */\n\n// given a string of css, return a simple rule tree\nexport function parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\nfunction lex(text) {\n  let root = {\n    start: 0,\n    end: text.length\n  };\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n.rules) {\n        n.rules = [];\n      }\n      let p = n;\n      let previous = p.rules[p.rules.length - 1];\n      n = {\n        start: i + 1,\n        parent: p,\n        previous: previous\n      };\n      p.rules.push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n.end = i + 1;\n      n = n.parent || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\nfunction parseCss(node, text) {\n  let t = text.substring(node.start, node.end - 1);\n  node.parsedCssText = node.cssText = t.trim();\n  if (node.parent) {\n    let ss = node.previous ? node.previous.end : node.parent.start;\n    t = text.substring(ss, node.start - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = node.parsedSelector = node.selector = t.trim();\n    node.atRule = (s.indexOf(AT_START) === 0);\n    // note, support a subset of rule types...\n    if (node.atRule) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node.type = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node.type = types.KEYFRAMES_RULE;\n        node.keyframesName =\n          node.selector.split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node.type = types.MIXIN_RULE;\n      } else {\n        node.type = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node.rules;\n  if (r$) {\n    for (let i = 0, l = r$.length, r;\n      (i < l) && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n// conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n// expanded form that doesn't require trailing space `\\000033`\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n// stringify parsed css.\nexport function stringify(node, preserveProperties, text) {\n  text = text || '';\n  // calc rule cssText\n  let cssText = '';\n  if (node.cssText || node.rules) {\n    let r$ = node.rules;\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r;\n        (i < l) && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties ? node.cssText :\n        removeCustomProps(node.cssText);\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node.selector) {\n      text += node.selector + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node.selector) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\nfunction _hasMixinRules(rules) {\n  return rules[0].selector.indexOf(VAR_START) === 0;\n}\n\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\nexport function removeCustomPropAssignment(cssText) {\n  return cssText\n    .replace(RX.customProp, '')\n    .replace(RX.mixinProp, '');\n}\n\nfunction removeCustomPropApply(cssText) {\n  return cssText\n    .replace(RX.mixinApply, '')\n    .replace(RX.varApply, '');\n}\n\nexport let types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n}\n\nlet OPEN_BRACE = '{';\nlet CLOSE_BRACE = '}';\n\n// helper regexp's\nlet RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n}\n\nlet VAR_START = '--';\nlet MEDIA_START = '@media';\nlet AT_START = '@';\n\nif (window.WCT) {\n  window['CssParse'] = {\n    parse,\n    stringify,\n    types,\n    removeCustomPropAssignment\n  };\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nexport let nativeShadow = Boolean(!window.ShadyDOM || !window.ShadyDOM.inUse);\n\n// force shim support\nlet forceShimCssProperties = window.location.search.match('forceShimCssProperties=true');\n\n// chrome 49 has semi-working css vars, check if box-shadow works\n// safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\nexport let nativeCssVariables = !forceShimCssProperties &&\n(!navigator.userAgent.match('AppleWebKit/601') &&\nwindow.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\n\n// experimental support for native @apply\nfunction detectNativeApply() {\n  let style = document.createElement('style');\n  style.textContent = '.foo { @apply --foo }';\n  document.head.appendChild(style);\n  let nativeCssApply = (style.sheet.cssRules[0].cssText.indexOf('apply') >= 0);\n  document.head.removeChild(style);\n  return nativeCssApply;\n}\n\nexport let nativeCssApply = false && detectNativeApply()\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport {nativeShadow, nativeCssVariables} from './style-settings'\nimport {parse, stringify, types} from './css-parse'\n\nexport function toCssText (rules, callback) {\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\nexport function rulesForStyle(style) {\n  if (!style.__cssRules && style.textContent) {\n    style.__cssRules = parse(style.textContent);\n  }\n  return style.__cssRules;\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\nexport function isKeyframesSelector(rule) {\n  return rule.parent &&\n  rule.parent.type === types.KEYFRAMES_RULE;\n}\n\nexport function forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  if (onlyActiveRules) {\n    if (node.type === types.MEDIA_RULE) {\n      let matchMedia = node.selector.match(rx.MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (node.type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback &&\n    node.type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (node.type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node.rules;\n  if (r$ && !skipRules) {\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\nexport function applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  return applyStyle(style, target, contextNode);\n}\n\nexport function applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) ||\n  target.firstChild;\n  lastHeadApplyNode = style;\n  return target.insertBefore(style, after);\n}\n\nexport function createScopeStyle(cssText, moniker) {\n  let style = document.createElement('style');\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\nexport function applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\n    moniker + ' ');\n  let after = lastHeadApplyNode ?\n    lastHeadApplyNode.nextSibling : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\nexport function isTargetedBuild(buildType) {\n  return nativeShadow ? buildType === 'shadow' : buildType === 'shady';\n}\n\n// cssBuildTypeForModule: function (module) {\n//   let dm = Polymer.DomModule.import(module);\n//   if (dm) {\n//     return getCssBuildType(dm);\n//   }\n// },\n//\nexport function getCssBuildType(element) {\n  return element.getAttribute('css-build');\n}\n\n// Walk from text[start] matching parens\n// returns position of the outer end paren\nfunction findMatchingParen(text, start) {\n  let level = 0;\n  for (let i=start, l=text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nexport function processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\nexport let rx = {\n  VAR_ASSIGN: /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:([^;{]*)|{([^}]*)})(?:(?=[;\\s}])|$)/gi,\n  MIXIN_MATCH: /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi,\n  VAR_CONSUMED: /(--[\\w-]+)\\s*([:,;)]|$)/gi,\n  ANIMATION_MATCH: /(animation\\s*:)|(animation-name\\s*:)/,\n  MEDIA_MATCH: /@media[^(]*(\\([^)]*\\))/,\n  IS_VAR: /^--/,\n  BRACKETED: /\\{[^}]*\\}/g,\n  HOST_PREFIX: '(?:^|[^.#[:])',\n  HOST_SUFFIX: '($|[.:[\\\\s>+~])'\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as StyleUtil from './style-util'\nimport {nativeShadow} from './style-settings'\n\n/* Transforms ShadowDOM styling into ShadyDOM styling\n\n * scoping:\n\n    * elements in scope get scoping selector class=\"x-foo-scope\"\n    * selectors re-written as follows:\n\n      div button -> div.x-foo-scope button.x-foo-scope\n\n * :host -> scopeName\n\n * :host(...) -> scopeName...\n\n * ::content -> ' '\n\n * ::shadow, /deep/: processed similar to ::content\n\n * :host-context(...): scopeName..., ... scopeName\n\n * ::slotted(...) -> scopeName > ...\n*/\nexport let StyleTransformer = {\n\n  // Given a node and scope name, add a scoping class to each node\n  // in the tree. This facilitates transforming css into scoped rules.\n  dom: function(node, scope, shouldRemoveScope) {\n    // one time optimization to skip scoping...\n    if (node.__styleScoped) {\n      node.__styleScoped = null;\n    } else {\n      this._transformDom(node, scope || '', shouldRemoveScope);\n    }\n  },\n\n  _transformDom: function(node, selector, shouldRemoveScope) {\n    if (node.classList) {\n      this.element(node, selector, shouldRemoveScope);\n    }\n    let c$ = (node.localName === 'template') ?\n      (node.content || node._content).childNodes :\n      node.children;\n    if (c$) {\n      for (let i=0; i<c$.length; i++) {\n        this._transformDom(c$[i], selector, shouldRemoveScope);\n      }\n    }\n  },\n\n  element: function(element, scope, shouldRemoveScope) {\n    // note: if using classes, we add both the general 'style-scope' class\n    // as well as the specific scope. This enables easy filtering of all\n    // `style-scope` elements\n    if (scope) {\n      // note: svg on IE does not have classList so fallback to class\n      if (element.classList) {\n        if (shouldRemoveScope) {\n          element.classList.remove(SCOPE_NAME);\n          element.classList.remove(scope);\n        } else {\n          element.classList.add(SCOPE_NAME);\n          element.classList.add(scope);\n        }\n      } else if (element.getAttribute) {\n        let c = element.getAttribute(CLASS);\n        if (shouldRemoveScope) {\n          if (c) {\n            element.setAttribute(CLASS, c.replace(SCOPE_NAME, '')\n            .replace(scope, ''));\n          }\n        } else {\n          element.setAttribute(CLASS, (c ? c + ' ' : '') +\n          SCOPE_NAME + ' ' + scope);\n        }\n      }\n    }\n  },\n\n  elementStyles: function(element, styleRules, callback) {\n    let cssBuildType = element.__cssBuild;\n    // no need to shim selectors if settings.useNativeShadow, also\n    // a shady css build will already have transformed selectors\n    // NOTE: This method may be called as part of static or property shimming.\n    // When there is a targeted build it will not be called for static shimming,\n    // but when the property shim is used it is called and should opt out of\n    // static shimming work when a proper build exists.\n    let cssText = (nativeShadow || cssBuildType === 'shady') ?\n    StyleUtil.toCssText(styleRules, callback) :\n    this.css(styleRules, element.is, element.extends, callback) + '\\n\\n';\n    return cssText.trim();\n  },\n\n  // Given a string of cssText and a scoping string (scope), returns\n  // a string of scoped css where each selector is transformed to include\n  // a class created from the scope. ShadowDOM selectors are also transformed\n  // (e.g. :host) to use the scoping selector.\n  css: function(rules, scope, ext, callback) {\n    let hostScope = this._calcHostScope(scope, ext);\n    scope = this._calcElementScope(scope);\n    let self = this;\n    return StyleUtil.toCssText(rules, function(rule) {\n      if (!rule.isScoped) {\n        self.rule(rule, scope, hostScope);\n        rule.isScoped = true;\n      }\n      if (callback) {\n        callback(rule, scope, hostScope);\n      }\n    });\n  },\n\n  _calcElementScope: function (scope) {\n    if (scope) {\n      return CSS_CLASS_PREFIX + scope;\n    } else {\n      return '';\n    }\n  },\n\n  _calcHostScope: function(scope, ext) {\n    return ext ? '[is=' +  scope + ']' : scope;\n  },\n\n  rule: function (rule, scope, hostScope) {\n    this._transformRule(rule, this._transformComplexSelector,\n      scope, hostScope);\n  },\n\n  // transforms a css rule to a scoped rule.\n  _transformRule: function(rule, transformer, scope, hostScope) {\n    // NOTE: save transformedSelector for subsequent matching of elements\n    // against selectors (e.g. when calculating style properties)\n    rule.selector = rule.transformedSelector =\n      this._transformRuleCss(rule, transformer, scope, hostScope);\n  },\n\n  _transformRuleCss: function(rule, transformer, scope, hostScope) {\n    let p$ = rule.selector.split(COMPLEX_SELECTOR_SEP);\n    // we want to skip transformation of rules that appear in keyframes,\n    // because they are keyframe selectors, not element selectors.\n    if (!StyleUtil.isKeyframesSelector(rule)) {\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n        p$[i] = transformer.call(this, p, scope, hostScope);\n      }\n    }\n    return p$.join(COMPLEX_SELECTOR_SEP);\n  },\n\n  _transformComplexSelector: function(selector, scope, hostScope) {\n    let stop = false;\n    let hostContext = false;\n    let self = this;\n    selector = selector.trim();\n    selector = selector.replace(CONTENT_START, HOST + ' $1');\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, function(m, c, s) {\n      if (!stop) {\n        let info = self._transformCompoundSelector(s, c, scope, hostScope);\n        stop = stop || info.stop;\n        hostContext = hostContext || info.hostContext;\n        c = info.combinator;\n        s = info.value;\n      } else {\n        s = s.replace(SCOPE_JUMP, ' ');\n      }\n      return c + s;\n    });\n    if (hostContext) {\n      selector = selector.replace(HOST_CONTEXT_PAREN,\n        function(m, pre, paren, post) {\n          return pre + paren + ' ' + hostScope + post +\n            COMPLEX_SELECTOR_SEP + ' ' + pre + hostScope + paren + post;\n         });\n    }\n    return selector;\n  },\n\n  _transformCompoundSelector: function(selector, combinator, scope, hostScope) {\n    // replace :host with host scoping class\n    let jumpIndex = selector.search(SCOPE_JUMP);\n    let hostContext = false;\n    if (selector.indexOf(HOST_CONTEXT) >=0) {\n      hostContext = true;\n    } else if (selector.indexOf(HOST) >=0) {\n      selector = this._transformHostSelector(selector, hostScope);\n    // replace other selectors with scoping class\n    } else if (jumpIndex !== 0) {\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\n        selector;\n    }\n    // remove left-side combinator when dealing with ::content.\n    if (selector.indexOf(CONTENT) >= 0) {\n      combinator = '';\n    }\n    // mark ::slotted() scope jump to replace with descendant selector + arg\n    // also ignore left-side combinator\n    let slotted = false;\n    if (selector.indexOf(SLOTTED) >= 0) {\n      combinator = '';\n      slotted = true;\n    }\n    // process scope jumping selectors up to the scope jump and then stop\n    let stop;\n    if (jumpIndex >= 0) {\n      stop = true;\n      if (slotted) {\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\n        selector = selector.replace(SLOTTED_PAREN, function (m, inside) {\n          return ' > ' + inside;\n        });\n      } else {\n        // e.g. .zonk ::content > .foo ==> .zonk.scope > .foo\n        selector = selector.replace(SCOPE_JUMP, ' ');\n      }\n    }\n    return {value: selector, combinator: combinator, stop: stop,\n      hostContext: hostContext};\n  },\n\n  _transformSimpleSelector: function(selector, scope) {\n    let p$ = selector.split(PSEUDO_PREFIX);\n    p$[0] += scope;\n    return p$.join(PSEUDO_PREFIX);\n  },\n\n  // :host(...) -> scopeName...\n  _transformHostSelector: function(selector, hostScope) {\n    let m = selector.match(HOST_PAREN);\n    let paren = m && m[2].trim() || '';\n    if (paren) {\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\n        // paren starts with a type selector\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\n        // if the type selector is our hostScope then avoid pre-pending it\n        if (typeSelector === hostScope) {\n          return paren;\n        // otherwise, this selector should not match in this scope so\n        // output a bogus selector.\n        } else {\n          return SELECTOR_NO_MATCH;\n        }\n      } else {\n        // make sure to do a replace here to catch selectors like:\n        // `:host(.foo)::before`\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\n          return hostScope + paren;\n        });\n      }\n    // if no paren, do a straight :host replacement.\n    // TODO(sorvell): this should not strictly be necessary but\n    // it's needed to maintain support for `:host[foo]` type selectors\n    // which have been improperly used under Shady DOM. This should be\n    // deprecated.\n    } else {\n      return selector.replace(HOST, hostScope);\n    }\n  },\n\n  documentRule: function(rule) {\n    // reset selector in case this is redone.\n    rule.selector = rule.parsedSelector;\n    this.normalizeRootSelector(rule);\n    this._transformRule(rule, this._transformDocumentSelector);\n  },\n\n  normalizeRootSelector: function(rule) {\n    if (rule.selector === ROOT) {\n      rule.selector = 'html';\n    }\n  },\n\n  _transformDocumentSelector: function(selector) {\n    return selector.match(SCOPE_JUMP) ?\n      this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR) :\n      this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\n  },\n\n  SCOPE_NAME: 'style-scope'\n};\n\nlet SCOPE_NAME = StyleTransformer.SCOPE_NAME;\nlet SCOPE_DOC_SELECTOR = ':not([' + SCOPE_NAME + '])' +\n  ':not(.' + SCOPE_NAME + ')';\nlet COMPLEX_SELECTOR_SEP = ',';\nlet SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=\\[])+)/g;\nlet SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\nlet HOST = ':host';\nlet ROOT = ':root';\n// NOTE: this supports 1 nested () pair for things like\n// :host(:not([selected]), more general support requires\n// parsing which seems like overkill\nlet HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\nlet HOST_CONTEXT = ':host-context';\nlet HOST_CONTEXT_PAREN = /(.*)(?::host-context)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))(.*)/;\n// BREAKME: replace with '::slotted()'\nlet CONTENT = '::content';\nlet SLOTTED = '::slotted';\n// similar to HOST_PAREN\nlet SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\n// BREAKME: replace with '::slotted()'\nlet SCOPE_JUMP = /::slotted|::content|::shadow|\\/deep\\//;\nlet CSS_CLASS_PREFIX = '.';\nlet PSEUDO_PREFIX = ':';\nlet CLASS = 'class';\nlet CONTENT_START = new RegExp('^(' + CONTENT + ')');\nlet SELECTOR_NO_MATCH = 'should_not_match';\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport {removeCustomPropAssignment} from './css-parse'\nimport {nativeShadow} from './style-settings'\nimport {StyleTransformer} from './style-transformer'\nimport * as StyleUtil from './style-util'\n\n// TODO: dedupe with shady\nlet p = window.Element.prototype;\nlet matchesSelector = p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\n  p.oMatchesSelector || p.webkitMatchesSelector;\n\nlet IS_IE = navigator.userAgent.match('Trident');\n\nexport let StyleProperties = {\n\n  // decorates styles with rule info and returns an array of used style\n  // property names\n  decorateStyles: function(rules, scope) {\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\n    let scopeSelector = StyleTransformer._calcHostScope(scope.is, scope.extends);\n    let cssBuild = rules.__cssBuild;\n    StyleUtil.forEachRule(rules, function(rule) {\n      self.decorateRule(rule);\n      // mark in-order position of ast rule in styles block, used for cache key\n      rule.index = ruleIndex++;\n      self.whenHostOrRootRule(scope, rule, cssBuild, function(info) {\n        // we can't cache styles with :host and :root props in @media rules\n        if (rule.parent.type === StyleUtil.ruleTypes.MEDIA_RULE) {\n          scope.__notStyleScopeCacheable = true;\n        }\n        if (info.isHost) {\n          // check if the selector is in the form of `:host-context()` or `:host()`\n          // if so, this style is not cacheable\n          let hostContextOrFunction = info.selector.split(' ').some(function(s) {\n            return s.indexOf(scopeSelector) === 0 && s.length !== scopeSelector.length;\n          });\n          scope.__notStyleScopeCacheable = scope.__notStyleScopeCacheable || hostContextOrFunction;\n        }\n      });\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\n    }, function onKeyframesRule(rule) {\n      keyframes.push(rule);\n    });\n    // Cache all found keyframes rules for later reference:\n    rules._keyframes = keyframes;\n    // return this list of property names *consumes* in these styles.\n    let names = [];\n    for (let i in props) {\n      names.push(i);\n    }\n    return names;\n  },\n\n  // decorate a single rule with property info\n  decorateRule: function(rule) {\n    if (rule.propertyInfo) {\n      return rule.propertyInfo;\n    }\n    let info = {}, properties = {};\n    let hasProperties = this.collectProperties(rule, properties);\n    if (hasProperties) {\n      info.properties = properties;\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\n      rule.rules = null;\n    }\n    info.cssText = this.collectCssText(rule);\n    rule.propertyInfo = info;\n    return info;\n  },\n\n  // collects the custom properties from a rule's cssText\n  collectProperties: function(rule, properties) {\n    let info = rule.propertyInfo;\n    if (info) {\n      if (info.properties) {\n        Object.assign(properties, info.properties);\n        return true;\n      }\n    } else {\n      let m, rx = this.rx.VAR_ASSIGN;\n      let cssText = rule.parsedCssText;\n      let value;\n      let any;\n      while ((m = rx.exec(cssText))) {\n        // note: group 2 is var, 3 is mixin\n        value = (m[2] || m[3]).trim();\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\n        if (value !== 'inherit' || value !== 'unset') {\n          properties[m[1].trim()] = value;\n        }\n        any = true;\n      }\n      return any;\n    }\n\n  },\n\n  // returns cssText of properties that consume variables/mixins\n  collectCssText: function(rule) {\n    return this.collectConsumingCssText(rule.parsedCssText);\n  },\n\n  // NOTE: we support consumption inside mixin assignment\n  // but not production, so strip out {...}\n  collectConsumingCssText: function(cssText) {\n    return cssText.replace(this.rx.BRACKETED, '')\n      .replace(this.rx.VAR_ASSIGN, '');\n  },\n\n  collectPropertiesInCssText: function(cssText, props) {\n    let m;\n    while ((m = this.rx.VAR_CONSUMED.exec(cssText))) {\n      let name = m[1];\n      // This regex catches all variable names, and following non-whitespace char\n      // If next char is not ':', then variable is a consumer\n      if (m[2] !== ':') {\n        props[name] = true;\n      }\n    }\n  },\n\n  // turns custom properties into realized values.\n  reify: function(props) {\n    // big perf optimization here: reify only *own* properties\n    // since this object has __proto__ of the element's scope properties\n    let names = Object.getOwnPropertyNames(props);\n    for (let i=0, n; i < names.length; i++) {\n      n = names[i];\n      props[n] = this.valueForProperty(props[n], props);\n    }\n  },\n\n  // given a property value, returns the reified value\n  // a property value may be:\n  // (1) a literal value like: red or 5px;\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\n  // var(--a, var(--b));\n  // (3) a literal mixin value like { properties }. Each of these properties\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\n  valueForProperty: function(property, props) {\n    // case (1) default\n    // case (3) defines a mixin and we have to reify the internals\n    if (property) {\n      if (property.indexOf(';') >=0) {\n        property = this.valueForProperties(property, props);\n      } else {\n        // case (2) variable\n        let self = this;\n        let fn = function(prefix, value, fallback, suffix) {\n          if (!value) {\n            return prefix + suffix;\n          }\n          let propertyValue = self.valueForProperty(props[value], props);\n          // if value is \"initial\", then the variable should be treated as unset\n          if (!propertyValue || propertyValue === 'initial') {\n            // fallback may be --a or var(--a) or literal\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\n            fallback || 'unset';\n          } else if (propertyValue === 'apply-shim-inherit') {\n            // CSS build will replace `inherit` with `apply-shim-inherit`\n            // for use with native css variables.\n            // Since we have full control, we can use `inherit` directly.\n            propertyValue = 'inherit';\n          }\n          return prefix + (propertyValue || '') + suffix;\n        };\n        property = StyleUtil.processVariableAndFallback(property, fn);\n      }\n    }\n    return property && property.trim() || '';\n  },\n\n  // note: we do not yet support mixin within mixin\n  valueForProperties: function(property, props) {\n    let parts = property.split(';');\n    for (let i=0, p, m; i<parts.length; i++) {\n      if ((p = parts[i])) {\n        this.rx.MIXIN_MATCH.lastIndex = 0;\n        m = this.rx.MIXIN_MATCH.exec(p);\n        if (m) {\n          p = this.valueForProperty(props[m[1]], props);\n        } else {\n          let colon = p.indexOf(':');\n          if (colon !== -1) {\n            let pp = p.substring(colon);\n            pp = pp.trim();\n            pp = this.valueForProperty(pp, props) || pp;\n            p = p.substring(0, colon) + pp;\n          }\n        }\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\n          // strip trailing ;\n          p.slice(0, -1) :\n          p || '';\n      }\n    }\n    return parts.join(';');\n  },\n\n  applyProperties: function(rule, props) {\n    let output = '';\n    // dynamically added sheets may not be decorated so ensure they are.\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (rule.propertyInfo.cssText) {\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\n    }\n    rule.cssText = output;\n  },\n\n  // Apply keyframe transformations to the cssText of a given rule. The\n  // keyframeTransforms object is a map of keyframe names to transformer\n  // functions which take in cssText and spit out transformed cssText.\n  applyKeyframeTransforms: function(rule, keyframeTransforms) {\n    let input = rule.cssText;\n    let output = rule.cssText;\n    if (rule.hasAnimations == null) {\n      // Cache whether or not the rule has any animations to begin with:\n      rule.hasAnimations = this.rx.ANIMATION_MATCH.test(input);\n    }\n    // If there are no animations referenced, we can skip transforms:\n    if (rule.hasAnimations) {\n      let transform;\n      // If we haven't transformed this rule before, we iterate over all\n      // transforms:\n      if (rule.keyframeNamesToTransform == null) {\n        rule.keyframeNamesToTransform = [];\n        for (let keyframe in keyframeTransforms) {\n          transform = keyframeTransforms[keyframe];\n          output = transform(input);\n          // If the transform actually changed the CSS text, we cache the\n          // transform name for future use:\n          if (input !== output) {\n            input = output;\n            rule.keyframeNamesToTransform.push(keyframe);\n          }\n        }\n      } else {\n        // If we already have a list of keyframe names that apply to this\n        // rule, we apply only those keyframe name transforms:\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\n          input = transform(input);\n        }\n        output = input;\n      }\n    }\n    rule.cssText = output;\n  },\n\n  // Test if the rules in these styles matches the given `element` and if so,\n  // collect any custom properties into `props`.\n  propertyDataFromStyles: function(rules, element) {\n    let props = {}, self = this;\n    // generates a unique key for these matches\n    let o = [];\n    // note: active rules excludes non-matching @media rules\n    StyleUtil.forEachRule(rules, function(rule) {\n      // TODO(sorvell): we could trim the set of rules at declaration\n      // time to only include ones that have properties\n      if (!rule.propertyInfo) {\n        self.decorateRule(rule);\n      }\n      // match element against transformedSelector: selector may contain\n      // unwanted uniquification and parsedSelector does not directly match\n      // for :host selectors.\n      let selectorToMatch = rule.transformedSelector || rule.parsedSelector;\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\n        if (matchesSelector.call(element, selectorToMatch)) {\n          self.collectProperties(rule, props);\n          // produce numeric key for these matches for lookup\n          addToBitMask(rule.index, o);\n        }\n      }\n    }, null, true);\n    return {properties: props, key: o};\n  },\n\n  whenHostOrRootRule: function(scope, rule, cssBuild, callback) {\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (!rule.propertyInfo.properties) {\n      return;\n    }\n    let hostScope = scope.is ?\n    StyleTransformer._calcHostScope(scope.is, scope.extends) :\n    'html';\n    let parsedSelector = rule.parsedSelector;\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\n    // build info is either in scope (when scope is an element) or in the style\n    // when scope is the default scope; note: this allows default scope to have\n    // mixed mode built and unbuilt styles.\n    if (cssBuild === 'shady') {\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\n    }\n    if (cssBuild === 'shadow') {\n      isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';\n      isHost = isHost && !isRoot;\n    }\n    if (!isRoot && !isHost) {\n      return;\n    }\n    let selectorToMatch = hostScope;\n    if (isHost) {\n      // need to transform :host under ShadowDOM because `:host` does not work with `matches`\n      if (nativeShadow && !rule.transformedSelector) {\n        // transform :host into a matchable selector\n        rule.transformedSelector =\n        StyleTransformer._transformRuleCss(\n          rule,\n          StyleTransformer._transformComplexSelector,\n          StyleTransformer._calcElementScope(scope.is),\n          hostScope\n        );\n      }\n      selectorToMatch = rule.transformedSelector || hostScope;\n    }\n    callback({\n      selector: selectorToMatch,\n      isHost: isHost,\n      isRoot: isRoot\n    });\n  },\n\n  hostAndRootPropertiesForScope: function(scope, rules) {\n    let hostProps = {}, rootProps = {}, self = this;\n    // note: active rules excludes non-matching @media rules\n    let cssBuild = rules && rules.__cssBuild;\n    StyleUtil.forEachRule(rules, function(rule) {\n      // if scope is StyleDefaults, use _element for matchesSelector\n      self.whenHostOrRootRule(scope, rule, cssBuild, function(info) {\n        let element = scope._element || scope;\n        if (matchesSelector.call(element, info.selector)) {\n          if (info.isHost) {\n            self.collectProperties(rule, hostProps);\n          } else {\n            self.collectProperties(rule, rootProps);\n          }\n        }\n      });\n    }, null, true);\n    return {rootProps: rootProps, hostProps: hostProps};\n  },\n\n  transformStyles: function(element, properties, scopeSelector) {\n    let self = this;\n    let hostSelector = StyleTransformer\n      ._calcHostScope(element.is, element.extends);\n    let rxHostSelector = element.extends ?\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\n      hostSelector;\n    let hostRx = new RegExp(this.rx.HOST_PREFIX + rxHostSelector +\n      this.rx.HOST_SUFFIX);\n    let rules = element.__styleRules;\n    let keyframeTransforms =\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\n    return StyleTransformer.elementStyles(element, rules, function(rule) {\n      self.applyProperties(rule, properties);\n      if (!nativeShadow &&\n          !StyleUtil.isKeyframesSelector(rule) &&\n          rule.cssText) {\n        // NOTE: keyframe transforms only scope munge animation names, so it\n        // is not necessary to apply them in ShadowDOM.\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\n      }\n    });\n  },\n\n  _elementKeyframeTransforms: function(element, rules, scopeSelector) {\n    let keyframesRules = rules._keyframes;\n    let keyframeTransforms = {};\n    if (!nativeShadow && keyframesRules) {\n      // For non-ShadowDOM, we transform all known keyframes rules in\n      // advance for the current scope. This allows us to catch keyframes\n      // rules that appear anywhere in the stylesheet:\n      for (let i = 0, keyframesRule = keyframesRules[i];\n           i < keyframesRules.length;\n           keyframesRule = keyframesRules[++i]) {\n        this._scopeKeyframes(keyframesRule, scopeSelector);\n        keyframeTransforms[keyframesRule.keyframesName] =\n            this._keyframesRuleTransformer(keyframesRule);\n      }\n    }\n    return keyframeTransforms;\n  },\n\n  // Generate a factory for transforming a chunk of CSS text to handle a\n  // particular scoped keyframes rule.\n  _keyframesRuleTransformer: function(keyframesRule) {\n    return function(cssText) {\n      return cssText.replace(\n          keyframesRule.keyframesNameRx,\n          keyframesRule.transformedKeyframesName);\n    };\n  },\n\n  // Transforms `@keyframes` names to be unique for the current host.\n  // Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\n  _scopeKeyframes: function(rule, scopeId) {\n    rule.keyframesNameRx = new RegExp(rule.keyframesName, 'g');\n    rule.transformedKeyframesName = rule.keyframesName + '-' + scopeId;\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\n    rule.selector = rule.transformedSelector.replace(\n        rule.keyframesName, rule.transformedKeyframesName);\n  },\n\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\n  // host selector: x-foo.wide -> .x-foo-42.wide\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\n  // (x-foo) to scope :host rules; this helps make property host rules\n  // have low specificity. They are overrideable by class selectors but,\n  // unfortunately, not by type selectors (e.g. overriding via\n  // `.special` is ok, but not by `x-foo`).\n  _scopeSelector: function(rule, hostRx, hostSelector, scopeId) {\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\n    let selector = rule.transformedSelector;\n    let scope = '.' + scopeId;\n    let parts = selector.split(',');\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\n      parts[i] = p.match(hostRx) ?\n        p.replace(hostSelector, scope) :\n        scope + ' ' + p;\n    }\n    rule.selector = parts.join(',');\n  },\n\n  applyElementScopeSelector: function(element, selector, old) {\n    let c = element.getAttribute('class') || '';\n    let v = old ? c.replace(old, selector) :\n      (c ? c + ' ' : '') + this.XSCOPE_NAME + ' ' + selector;\n    if (c !== v) {\n      element.setAttribute('class', v);\n    }\n  },\n\n  applyElementStyle: function(element, properties, selector, style) {\n    // calculate cssText to apply\n    let cssText = style ? style.textContent || '' :\n      this.transformStyles(element, properties, selector);\n    // if shady and we have a cached style that is not style, decrement\n    let s = element.__customStyle;\n    if (s && !nativeShadow && (s !== style)) {\n      s._useCount--;\n      if (s._useCount <= 0 && s.parentNode) {\n        s.parentNode.removeChild(s);\n      }\n    }\n    // apply styling always under native or if we generated style\n    // or the cached style is not in document(!)\n    if (nativeShadow) {\n      // update existing style only under native\n      if (element.__customStyle) {\n        element.__customStyle.textContent = cssText;\n        style = element.__customStyle;\n      // otherwise, if we have css to apply, do so\n      } else if (cssText) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        style = StyleUtil.applyCss(cssText, selector, element.shadowRoot,\n          element.__placeholder);\n      }\n    } else {\n      // shady and no cache hit\n      if (!style) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        if (cssText) {\n          style = StyleUtil.applyCss(cssText, selector, null,\n            element.__placeholder);\n        }\n      // shady and cache hit but not in document\n      } else if (!style.parentNode) {\n        StyleUtil.applyStyle(style, null, element.__placeholder);\n      }\n\n    }\n    // ensure this style is our custom style and increment its use count.\n    if (style) {\n      style._useCount = style._useCount || 0;\n      // increment use count if we changed styles\n      if (element.__customStyle != style) {\n        style._useCount++;\n      }\n      element.__customStyle = style;\n    }\n    // @media rules may be stale in IE 10 and 11\n    if (IS_IE) {\n      style.textContent = style.textContent;\n    }\n    return style;\n  },\n\n  applyCustomStyle: function(style, properties) {\n    let rules = StyleUtil.rulesForStyle(style);\n    let self = this;\n    style.textContent = StyleUtil.toCssText(rules, function(rule) {\n      let css = rule.cssText = rule.parsedCssText;\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\n        // remove property assignments\n        // so next function isn't confused\n        // NOTE: we have 3 categories of css:\n        // (1) normal properties,\n        // (2) custom property assignments (--foo: red;),\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\n        // In elements, 1 and 3 are separated for efficiency; here they\n        // are not and this makes this case unique.\n        css = removeCustomPropAssignment(css);\n        // replace with reified properties, scenario is same as mixin\n        rule.cssText = self.valueForProperties(css, properties);\n      }\n    });\n  },\n\n  rx: StyleUtil.rx,\n  XSCOPE_NAME: 'x-scope'\n\n};\n\nfunction addToBitMask(n, bits) {\n  let o = parseInt(n / 32);\n  let v = 1 << (n % 32);\n  bits[o] = (bits[o] || 0) | v;\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nexport let templateMap = {};\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport {applyStylePlaceHolder} from './style-util'\nimport {nativeShadow} from './style-settings'\n\nexport let placeholderMap = {};\n\nlet ce = window.customElements;\nif (ce && !nativeShadow) {\n  const origDefine = ce.define;\n  ce.define = function() {\n    let name = arguments[0];\n    placeholderMap[name] = applyStylePlaceHolder(name);\n    return origDefine.apply(this, arguments);\n  };\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/**\n * The apply shim simulates the behavior of `@apply` proposed at\n * https://tabatkins.github.io/specs/css-apply-rule/.\n * The approach is to convert a property like this:\n *\n *    --foo: {color: red; background: blue;}\n *\n * to this:\n *\n *    --foo_-_color: red;\n *    --foo_-_background: blue;\n *\n * Then where `@apply --foo` is used, that is converted to:\n *\n *    color: var(--foo_-_color);\n *    background: var(--foo_-_background);\n *\n * This approach generally works but there are some issues and limitations.\n * Consider, for example, that somewhere *between* where `--foo` is set and used,\n * another element sets it to:\n *\n *    --foo: { border: 2px solid red; }\n *\n * We must now ensure that the color and background from the previous setting\n * do not apply. This is accomplished by changing the property set to this:\n *\n *    --foo_-_border: 2px solid red;\n *    --foo_-_color: initial;\n *    --foo_-_background: initial;\n *\n * This works but introduces one new issue.\n * Consider this setup at the point where the `@apply` is used:\n *\n *    background: orange;\n *    @apply --foo;\n *\n * In this case the background will be unset (initial) rather than the desired\n * `orange`. We address this by altering the property set to use a fallback\n * value like this:\n *\n *    color: var(--foo_-_color);\n *    background: var(--foo_-_background, orange);\n *    border: var(--foo_-_border);\n *\n * Note that the default is retained in the property set and the `background` is\n * the desired `orange`. This leads us to a limitation.\n *\n * Limitation 1:\n\n * Only properties in the rule where the `@apply`\n * is used are considered as default values.\n * If another rule matches the element and sets `background` with\n * less specificity than the rule in which `@apply` appears,\n * the `background` will not be set.\n *\n * Limitation 2:\n *\n * When using Polymer's `updateStyles` api, new properties may not be set for\n * `@apply` properties.\n\n*/\nimport {rx, rulesForStyle, forEachRule, processVariableAndFallback} from './style-util'\nimport {templateMap} from './template-map'\n\nlet MIXIN_MATCH = rx.MIXIN_MATCH;\nlet VAR_ASSIGN = rx.VAR_ASSIGN;\n\nlet APPLY_NAME_CLEAN = /;\\s*/m;\nlet INITIAL_INHERIT = /^\\s*(initial)|(inherit)\\s*$/;\n\n// separator used between mixin-name and mixin-property-name when producing properties\n// NOTE: plain '-' may cause collisions in user styles\nlet MIXIN_VAR_SEP = '_-_';\n\n// map of mixin to property names\n// --foo: {border: 2px} -> {properties: {(--foo, ['border'])}, dependants: {'element-name': proto}}\nclass MixinMap {\n  constructor() {\n    this._map = {};\n  }\n  set(name, props) {\n    name = name.trim();\n    this._map[name] = {\n      properties: props,\n      dependants: {}\n    }\n  }\n  get(name) {\n    name = name.trim();\n    return this._map[name];\n  }\n}\n\nclass ApplyShim {\n  constructor() {\n    this._currentTemplate = null;\n    this._measureElement = null;\n    this._map = new MixinMap();\n    this._separator = MIXIN_VAR_SEP;\n    this._boundProduceCssProperties = (\n      matchText, propertyName, valueProperty, valueMixin) =>\n        this._produceCssProperties(\n          matchText, propertyName, valueProperty, valueMixin);\n  }\n  transformStyle(style, elementName) {\n    this.transformRulse(rulesForStyle(style), elementName);\n  }\n  transformRules(rules, elementName) {\n    this._currentTemplate = templateMap[elementName];\n    forEachRule(rules, (r) => { this.transformRule(r); });\n    if (this._currentTemplate) {\n      this._currentTemplate.__applyShimInvalid = false;\n    }\n    this._currentTemplate = null;\n  }\n  transformRule(rule) {\n    rule.cssText = this.transformCssText(rule.parsedCssText);\n    // :root was only used for variable assignment in property shim,\n    // but generates invalid selectors with real properties.\n    // replace with `:host > *`, which serves the same effect\n    if (rule.selector === ':root') {\n      rule.selector = ':host > *';\n    }\n  }\n  transformCssText(cssText) {\n    // produce variables\n    cssText = cssText.replace(VAR_ASSIGN, this._boundProduceCssProperties);\n    // consume mixins\n    return this._consumeCssProperties(cssText);\n  }\n  _getInitialValueForProperty(property) {\n    if (!this._measureElement) {\n      this._measureElement = document.createElement('meta');\n      this._measureElement.style.all = 'initial';\n      document.head.appendChild(this._measureElement);\n    }\n    return window.getComputedStyle(this._measureElement).getPropertyValue(property);\n  }\n  // replace mixin consumption with variable consumption\n  _consumeCssProperties(text) {\n    let m;\n    // loop over text until all mixins with defintions have been applied\n    while((m = MIXIN_MATCH.exec(text))) {\n      let matchText = m[0];\n      let mixinName = m[1];\n      let idx = m.index;\n      // collect properties before apply to be \"defaults\" if mixin might override them\n      // match includes a \"prefix\", so find the start and end positions of @apply\n      let applyPos = idx + matchText.indexOf('@apply');\n      let afterApplyPos = idx + matchText.length;\n      // find props defined before this @apply\n      let textBeforeApply = text.slice(0, applyPos);\n      let textAfterApply = text.slice(afterApplyPos);\n      let defaults = this._cssTextToMap(textBeforeApply);\n      let replacement = this._atApplyToCssProperties(mixinName, defaults);\n      // use regex match position to replace mixin, keep linear processing time\n      text = [textBeforeApply, replacement, textAfterApply].join('');\n      // move regex search to _after_ replacement\n      MIXIN_MATCH.lastIndex = idx + replacement.length;\n    }\n    return text;\n  }\n  // produce variable consumption at the site of mixin consumption\n  // @apply --foo; -> for all props (${propname}: var(--foo_-_${propname}, ${fallback[propname]}}))\n  // Example:\n  // border: var(--foo_-_border); padding: var(--foo_-_padding, 2px)\n  _atApplyToCssProperties(mixinName, fallbacks) {\n    mixinName = mixinName.replace(APPLY_NAME_CLEAN, '');\n    let vars = [];\n    let mixinEntry = this._map.get(mixinName);\n    // if we depend on a mixin before it is created\n    // make a sentinel entry in the map to add this element as a dependency for when it is defined.\n    if (!mixinEntry) {\n      this._map.set(mixinName, {});\n      mixinEntry = this._map.get(mixinName);\n    }\n    if (mixinEntry) {\n      if (this._currentTemplate) {\n        mixinEntry.dependants[this._currentTemplate.name] = this._currentTemplate;\n      }\n      let p, parts, f;\n      for (p in mixinEntry.properties) {\n        f = fallbacks && fallbacks[p];\n        parts = [p, ': var(', mixinName, MIXIN_VAR_SEP, p];\n        if (f) {\n          parts.push(',', f);\n        }\n        parts.push(')');\n        vars.push(parts.join(''));\n      }\n    }\n    return vars.join('; ');\n  }\n\n  _replaceInitialOrInherit(property, value) {\n    let match = INITIAL_INHERIT.exec(value);\n    if (match) {\n      if (match[1]) {\n        // initial\n        // replace `initial` with the concrete initial value for this property\n        value = ApplyShim._getInitialValueForProperty(property);\n      } else {\n        // inherit\n        // with this purposfully illegal value, the variable will be invalid at\n        // compute time (https://www.w3.org/TR/css-variables/#invalid-at-computed-value-time)\n        // and for inheriting values, will behave similarly\n        // we cannot support the same behavior for non inheriting values like 'border'\n        value = 'apply-shim-inherit';\n      }\n    }\n    return value;\n  }\n\n  // \"parse\" a mixin definition into a map of properties and values\n  // cssTextToMap('border: 2px solid black') -> ('border', '2px solid black')\n  _cssTextToMap(text) {\n    let props = text.split(';');\n    let property, value;\n    let out = {};\n    for (let i = 0, p, sp; i < props.length; i++) {\n      p = props[i];\n      if (p) {\n        sp = p.split(':');\n        // ignore lines that aren't definitions like @media\n        if (sp.length > 1) {\n          property = sp[0].trim();\n          // some properties may have ':' in the value, like data urls\n          value = this._replaceInitialOrInherit(property, sp.slice(1).join(':'));\n          out[property] = value;\n        }\n      }\n    }\n    return out;\n  }\n\n  _invalidateMixinEntry(mixinEntry) {\n    for (let elementName in mixinEntry.dependants) {\n      if (elementName !== this._currentTemplate) {\n        mixinEntry.dependants[elementName].__applyShimInvalid = true;\n      }\n    }\n  }\n\n  _produceCssProperties(matchText, propertyName, valueProperty, valueMixin) {\n    // handle case where property value is a mixin\n    if (valueProperty) {\n      // form: --mixin2: var(--mixin1), where --mixin1 is in the map\n      processVariableAndFallback(valueProperty, (prefix, value) => {\n        if (value && this._map.get(value)) {\n          valueMixin = '@apply ' + value + ';';\n        }\n      });\n    }\n    if (!valueMixin) {\n      return matchText;\n    }\n    let mixinAsProperties = this._consumeCssProperties(valueMixin);\n    let prefix = matchText.slice(0, matchText.indexOf('--'));\n    let mixinValues = this._cssTextToMap(mixinAsProperties);\n    let combinedProps = mixinValues;\n    let mixinEntry = this._map.get(propertyName);\n    let oldProps = mixinEntry && mixinEntry.properties;\n    if (oldProps) {\n      // NOTE: since we use mixin, the map of properties is updated here\n      // and this is what we want.\n      combinedProps = Object.assign(Object.create(oldProps), mixinValues);\n    } else {\n      this._map.set(propertyName, combinedProps);\n    }\n    let out = [];\n    let p, v;\n    // set variables defined by current mixin\n    let needToInvalidate = false;\n    for (p in combinedProps) {\n      v = mixinValues[p];\n      // if property not defined by current mixin, set initial\n      if (v === undefined) {\n        v = 'initial';\n      }\n      if (oldProps && !(p in oldProps)) {\n        needToInvalidate = true;\n      }\n      out.push(propertyName + MIXIN_VAR_SEP + p + ': ' + v);\n    }\n    if (needToInvalidate) {\n      this._invalidateMixinEntry(mixinEntry);\n    }\n    if (mixinEntry) {\n      mixinEntry.properties = combinedProps;\n    }\n    // because the mixinMap is global, the mixin might conflict with\n    // a different scope's simple variable definition:\n    // Example:\n    // some style somewhere:\n    // --mixin1:{ ... }\n    // --mixin2: var(--mixin1);\n    // some other element:\n    // --mixin1: 10px solid red;\n    // --foo: var(--mixin1);\n    // In this case, we leave the original variable definition in place.\n    if (valueProperty) {\n      prefix = matchText + ';' + prefix;\n    }\n    return prefix + out.join('; ') + ';';\n  }\n}\n\nlet applyShim = new ApplyShim();\nwindow['ApplyShim'] = applyShim;\nexport default applyShim;\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport {parse} from './css-parse'\nimport {nativeShadow, nativeCssVariables, nativeCssApply} from './style-settings'\nimport {StyleTransformer} from './style-transformer'\nimport * as StyleUtil from './style-util'\nimport {StyleProperties} from './style-properties'\nimport {templateMap} from './template-map'\nimport {placeholderMap} from './style-placeholder'\n\n// TODO(dfreedm): split into separate global\nimport ApplyShim from './apply-shim'\n\nlet STYLEHOST = Symbol('stylehost');\n\nexport let ShadyCSS = {\n  scopeCounter: {},\n  nativeShadow: nativeShadow,\n  nativeCss: nativeCssVariables,\n  nativeCssApply: nativeCssApply,\n  _documentOwner: document.documentElement,\n  _generateScopeSelector(name) {\n    let id = this.scopeCounter[name] = (this.scopeCounter[name] || 0) + 1;\n    return name + '-' + id;\n  },\n  _gatherStyles(template) {\n    let styles = template.content.querySelectorAll('style');\n    let cssText = [];\n    for (let i = 0; i < styles.length; i++) {\n      let s = styles[i];\n      cssText.push(s.textContent);\n      s.parentNode.removeChild(s);\n    }\n    return cssText.join('');\n  },\n  prepareTemplate(host, template) {\n    if (template._prepared) {\n      return;\n    }\n    template._prepared = true;\n    template.name = host.is;\n    templateMap[host.is] = template;\n    let cssText = this._gatherStyles(template).trim();\n    if (!this.nativeShadow) {\n      StyleTransformer.dom(template.content, host.is);\n    }\n    let ast = cssText && parse(cssText);\n    if (ast && this.nativeCss && !this.nativeCssApply) {\n      ApplyShim.transformRules(ast, host.is);\n    }\n    let ownPropertyNames = [];\n    if (ast) {\n      template._styleAst = ast;\n      if (!this.nativeCss) {\n        ownPropertyNames = StyleProperties.decorateStyles(\n          template._styleAst, host);\n      }\n      if (!ownPropertyNames.length || this.nativeCss) {\n        let root = this.nativeShadow ? template.content : null;\n        let placeholder = placeholderMap[host.is];\n        this._generateStaticStyle(host, template._styleAst, root, placeholder);\n      }\n    }\n    template._ownPropertyNames = ownPropertyNames;\n  },\n  _generateStaticStyle(host, rules, shadowroot, placeholder) {\n    let cssText = StyleTransformer.elementStyles(host, rules);\n    StyleUtil.applyCss(cssText, host.is, shadowroot, placeholder);\n  },\n  _prepareHost(host) {\n    let template = templateMap[host.is];\n    if (template) {\n      host.__styleRules = template._styleAst;\n    }\n    host[STYLEHOST] = true;\n    host.__placeholder = placeholderMap[host.is];\n    host.__overrideStyleProperties = {};\n    if (!this.nativeCss) {\n      host.__styleProperties = null;\n      host.__ownStyleProperties = null;\n      host.__scopeSelector = null;\n      if (template) {\n        host.__ownStylePropertyNames = template._ownPropertyNames;\n      }\n    }\n  },\n  applyStyle(host, overrideProps) {\n    if (!host[STYLEHOST]) {\n      this._prepareHost(host);\n    }\n    this._ensureDocumentApplied();\n    Object.assign(host.__overrideStyleProperties, overrideProps);\n    if (this.nativeCss) {\n      let template = templateMap[host.is];\n      if (template && template._styleAst && template.__applyShimInvalid) {\n        // update template\n        ApplyShim.transformRules(template._styleAst, host.is);\n        let target = this.nativeShadow ? template.content : null;\n        this._generateStaticStyle(host, template._styleAst, target);\n        // update instance if native shadowdom\n        if (this.nativeShadow) {\n          this._generateStaticStyle(host, template._styleAst, this.shadowRoot);\n        }\n        host.__styleRules = template._styleAst;\n      }\n      this._updateNativeProperties(host, host.__overrideStyleProperties);\n    } else {\n      this._updateProperties(host, host.__overrideStyleProperties);\n      if (host.__ownStylePropertyNames && host.__ownStylePropertyNames.length) {\n        // TODO: use caching\n        this._applyStyleProperties(host);\n      }\n      let root = this._isRootOwner(host) ? host : host.shadowRoot;\n      // note: some elements may not have a root!\n      if (root) {\n        this._applyToDescendants(root);\n      }\n    }\n  },\n  // marks document styles dirty which means that next time any styling\n  // is applied via `applyStyle`, document styles will be applied.\n  markDocumentDirty() {\n    this._documentOwner.__clean = false;\n  },\n  // Returns true if document styles are dirty. Can be used to determine\n  // if it's necessary to flush styling (Polymer.updateStyles)\n  // at a given time.\n  isDocumentDirty() {\n    return !this._documentOwner.__clean;\n  },\n  // ensures that document styles (custom-style) have their\n  // custom properties applied\n  _ensureDocumentApplied() {\n    let owner = this._documentOwner;\n    if (!owner.__clean) {\n      if (!owner.__overrideStyleProperties) {\n        owner.__overrideStyleProperties = {};\n      }\n      if (!this.nativeCss) {\n        this._updateProperties(owner);\n        let s$ = owner.__documentStyles;\n        if (s$) {\n          for (let i=0; i < s$.length; i++) {\n            let style = s$[i];\n            style.removeAttribute('type');\n            StyleProperties.applyCustomStyle(style,\n              owner.__styleProperties);\n          }\n        }\n      }\n      owner.__clean = true;\n    }\n  },\n  _applyToDescendants(root) {\n    let c$ = root.children;\n    for (let i = 0, c; i < c$.length; i++) {\n      c = c$[i];\n      if (c.shadowRoot) {\n        this.applyStyle(c);\n      }\n      this._applyToDescendants(c);\n    }\n  },\n  _styleOwnerForNode(node) {\n    let root = node.getRootNode();\n    let host = root.host;\n    if (host) {\n      if (host[STYLEHOST]) {\n        return host;\n      } else {\n        return this._styleOwnerForNode(host);\n      }\n    }\n    return this._documentOwner;\n  },\n  _isRootOwner(node) {\n    return (node === this._documentOwner);\n  },\n  _applyStyleProperties(host) {\n    let oldScopeSelector = host.__scopeSelector;\n    host.__scopeSelector = this._generateScopeSelector(host.is);\n    let style = StyleProperties.applyElementStyle(host, host.__styleProperties, host.__scopeSelector, null);\n    if (!this.nativeShadow) {\n      StyleProperties.applyElementScopeSelector(host, host.__scopeSelector, oldScopeSelector);\n    }\n    return style;\n  },\n  _updateProperties(host) {\n    let owner = this._styleOwnerForNode(host);\n    let ownerProperties = owner.__styleProperties;\n    let props = Object.create(ownerProperties || null);\n    let hostAndRootProps = StyleProperties.hostAndRootPropertiesForScope(host, host.__styleRules);\n    let propertiesMatchingHost = StyleProperties.propertyDataFromStyles(owner.__styleRules, host).properties;\n    Object.assign(\n      props,\n      hostAndRootProps.hostProps,\n      propertiesMatchingHost,\n      hostAndRootProps.rootProps\n    );\n    this._mixinOverrideStyles(props, host.__overrideStyleProperties);\n    StyleProperties.reify(props);\n    host.__styleProperties = props;\n    let ownProps = {};\n    if (host.__ownStylePropertyNames) {\n      for (let i = 0, n; i < host.__ownStylePropertyNames.length; i++) {\n        n = host.__ownStylePropertyNames[i];\n        ownProps[n] = props[n];\n      }\n    }\n    host.__ownStyleProperties = ownProps;\n  },\n  _mixinOverrideStyles(props, overrides) {\n    for (let p in overrides) {\n      let v = overrides[p];\n      // skip override props if they are not truthy or 0\n      // in order to fall back to inherited values\n      if (v || v === 0) {\n        props[p] = v;\n      }\n    }\n  },\n  _updateNativeProperties(element, properties) {\n    // remove previous properties\n    for (let p in properties) {\n      // NOTE: for bc with shim, don't apply null values.\n      if (p === null) {\n        element.style.removeProperty(p);\n      } else {\n        element.style.setProperty(p, properties[p]);\n      }\n    }\n  },\n  // transforms a style such that it is scope-safe for the document scope.\n  transformForDocument(style) {\n    let shouldAdd = !style.__cssRules;\n    let rules = StyleUtil.rulesForStyle(style);\n    if (shouldAdd) {\n      let root = this._documentOwner;\n      root.__documentStyles = root.__documentStyles || [];\n      root.__documentStyles.push(style);\n      // keep 1 aggregated set of style rules for the root.\n      root.__styleRules = root.__styleRules || {rules: []};\n      root.__styleRules.rules.push(rules);\n    }\n    let self = this;\n    StyleUtil.forEachRule(rules,\n      function(rule) {\n        // shim the selector for current runtime settings\n        if (!self.nativeShadow) {\n          StyleTransformer.documentRule(rule);\n        } else {\n          StyleTransformer.normalizeRootSelector(rule);\n        }\n        // run the apply shim if unbuilt and using native css custom properties\n        if (self.nativeCss && !self.nativeCssApply) {\n          ApplyShim.transformRule(rule);\n        }\n      }\n    );\n    // custom properties shimming\n    // (if we use native custom properties, no need to apply any property shimming)\n    if (this.nativeCss) {\n      // TODO(dfreedm): replace build logic.\n      // there's no targeted build, so the shimmed styles must be applied.\n      style.removeAttribute('type');\n      style.textContent = StyleUtil.toCssText(rules);\n    }\n  },\n  updateStyles(properties) {\n    this.markDocumentDirty();\n    this.applyStyle(this._documentOwner, properties);\n  }\n}\n\nwindow['ShadyCSS'] = ShadyCSS;\n"],"sourceRoot":"/source/"}